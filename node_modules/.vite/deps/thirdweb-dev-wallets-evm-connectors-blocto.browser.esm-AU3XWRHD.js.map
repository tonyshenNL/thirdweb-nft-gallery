{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport BloctoSDK from '@blocto/sdk';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-a64268ca.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, a as ConnectorNotFoundError, S as SwitchChainError } from '../../../../dist/errors-d961f852.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _onAccountsChangedBind = /*#__PURE__*/new WeakMap();\nvar _onChainChangedBind = /*#__PURE__*/new WeakMap();\nvar _onDisconnectBind = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nvar _handleConnectReset = /*#__PURE__*/new WeakSet();\nclass BloctoConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options = {}\n    } = _ref;\n    super({\n      chains,\n      options\n    });\n    _classPrivateMethodInitSpec(this, _handleConnectReset);\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.blocto);\n    _defineProperty(this, \"name\", \"Blocto\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onAccountsChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onChainChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnectBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _onAccountsChangedBind, this.onAccountsChanged.bind(this));\n    _classPrivateFieldSet(this, _onChainChangedBind, this.onChainChanged.bind(this));\n    _classPrivateFieldSet(this, _onDisconnectBind, this.onDisconnect.bind(this));\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider(config);\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.request({\n      method: \"wallet_disconnect\"\n    });\n    this.removeListeners();\n    _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    const [address] = accounts || [];\n    if (!address) {\n      throw new Error(\"No accounts found\");\n    }\n    return address;\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!_classPrivateFieldGet(this, _provider)) {\n      const _chainId = chainId ?? this.options.chainId ?? this.chains[0]?.chainId ?? 1;\n      const _rpc = this.chains.find(x => x.chainId === _chainId)?.rpc[0];\n      _classPrivateFieldSet(this, _provider, new BloctoSDK({\n        ethereum: {\n          chainId: _chainId,\n          rpc: _rpc\n        },\n        appId: this.options.appId\n      })?.ethereum);\n    }\n    if (!_classPrivateFieldGet(this, _provider)) {\n      throw new ConnectorNotFoundError();\n    }\n    return Promise.resolve(_classPrivateFieldGet(this, _provider));\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    return !!_classPrivateFieldGet(this, _provider)?._blocto?.sessionKey ?? false;\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    const chain = this.chains.find(x => x.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    }\n    const isBloctoSupportChain = provider._blocto.supportNetworkList[`${chainId}`];\n    if (!isBloctoSupportChain) {\n      throw new SwitchChainError(new Error(`Blocto unsupported chain: ${id}`));\n    }\n    try {\n      await provider.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: id,\n          rpcUrls: getValidPublicRPCUrl(chain) // no client id on purpose here\n        }]\n      });\n\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return chain;\n    } catch (error) {\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  onAccountsChanged() {\n    // not supported yet\n  }\n  async onChainChanged(chain) {\n    const id = normalizeChainId(chain);\n    const unsupported = this.isChainUnsupported(id);\n    const account = await this.getAccount();\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      },\n      account\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.on(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n  async removeListeners() {\n    const provider = await this.getProvider();\n    provider.off(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.off(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.off(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\nfunction _handleConnectReset2() {\n  _classPrivateFieldSet(this, _provider, undefined);\n}\n\nexport { BloctoConnector };\n"],
  "mappings": "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",
  "names": []
}
