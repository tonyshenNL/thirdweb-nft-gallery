{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { ethers, utils } from 'ethers';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic } from 'magic-sdk';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nconst IS_SERVER = \"object\" === \"undefined\";\nclass MagicBaseConnector extends WagmiConnector {\n  constructor(config) {\n    super(config);\n    _defineProperty(this, \"id\", \"magic-link\");\n    _defineProperty(this, \"name\", \"Magic Link\");\n    _defineProperty(this, \"ready\", !IS_SERVER);\n    this.magicOptions = config.options;\n  }\n  async getAccount() {\n    const provider = new ethers.providers.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n    ;\n\n    const signer = provider.getSigner();\n    const account = await signer.getAddress();\n    if (account.startsWith(\"0x\")) {\n      return account;\n    }\n    return `0x${account}`;\n  }\n  async getProvider() {\n    if (this.provider) {\n      return this.provider;\n    }\n    const magic = this.getMagicSDK();\n    this.provider = magic.rpcProvider;\n    return this.provider;\n  }\n  async getSigner() {\n    const provider = new ethers.providers.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n    ;\n\n    const signer = await provider.getSigner();\n    return signer;\n  }\n  async isAuthorized() {\n    const magic = this.getMagicSDK();\n    try {\n      return await magic.user.isLoggedIn();\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onChainChanged(chainId) {\n    const id = normalizeChainId(chainId);\n    const unsupported = this.isChainUnsupported(id);\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      }\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async disconnect() {\n    const magic = this.getMagicSDK();\n    await magic.user.logout();\n  }\n}\nvar _connectedChainId = /*#__PURE__*/new WeakMap();\nvar _type = /*#__PURE__*/new WeakMap();\nclass MagicAuthConnector extends MagicBaseConnector {\n  constructor(config) {\n    super(config);\n    _classPrivateFieldInitSpec(this, _connectedChainId, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _type, {\n      writable: true,\n      value: void 0\n    });\n    this.magicSdkConfiguration = config.options.magicSdkConfiguration;\n    _classPrivateFieldSet(this, _type, config.options.type);\n    this.oauthProviders = config.options.oauthOptions?.providers || [];\n    this.oauthRedirectURI = config.options.oauthOptions?.redirectURI;\n  }\n  async connect(options) {\n    if (!this.magicOptions.apiKey) {\n      throw new Error(\"Magic API Key is not provided.\");\n    }\n    try {\n      if (options.chainId) {\n        this.initializeMagicSDK({\n          chainId: options.chainId\n        });\n      }\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // Check if there is a user logged in\n      const isAuthenticated = await this.isAuthorized();\n\n      // Check if we have a chainId, in case of error just assign 0 for legacy\n      let chainId;\n      try {\n        chainId = await this.getChainId();\n      } catch (e) {\n        chainId = 0;\n      }\n      _classPrivateFieldSet(this, _connectedChainId, chainId);\n\n      // if there is a user logged in, return the user\n      if (isAuthenticated) {\n        return {\n          provider,\n          chain: {\n            id: chainId,\n            unsupported: false\n          },\n          account: await this.getAccount()\n        };\n      }\n      const magic = this.getMagicSDK();\n      if (_classPrivateFieldGet(this, _type) === \"connect\") {\n        if (\"email\" in options || \"phoneNumber\" in options) {\n          console.warn(\"Passing email or phoneNumber is not required for Magic Connect\");\n        }\n        await magic.wallet.connectWithUI();\n      } else {\n        // LOGIN WITH MAGIC LINK WITH OAUTH PROVIDER\n        if (\"oauthProvider\" in options) {\n          await magic.oauth.loginWithRedirect({\n            provider: options.oauthProvider,\n            redirectURI: this.oauthRedirectURI || window.location.href\n          });\n          await new Promise(res => {\n            // never resolve - to keep the app in \"connecting...\" state until the redirect happens\n            setTimeout(res, 10000); // timeout if takes if redirect doesn't happen for 10 seconds (will likely never happen)\n          });\n        }\n\n        // LOGIN WITH MAGIC LINK WITH EMAIL\n        else if (\"email\" in options) {\n          await magic.auth.loginWithMagicLink({\n            email: options.email,\n            showUI: true\n          });\n        }\n\n        // LOGIN WITH MAGIC LINK WITH PHONE NUMBER\n        else if (\"phoneNumber\" in options) {\n          await magic.auth.loginWithSMS({\n            phoneNumber: options.phoneNumber\n          });\n        }\n\n        // error\n        else {\n          throw new Error(\"Invalid options: Either provide and email, phoneNumber or oauthProvider when using Magic Auth\");\n        }\n      }\n      const signer = await this.getSigner();\n      let account = await signer.getAddress();\n      if (!account.startsWith(\"0x\")) {\n        account = `0x${account}`;\n      }\n      return {\n        account,\n        chain: {\n          id: chainId,\n          unsupported: false\n        },\n        provider\n      };\n\n      // throw new UserRejectedRequestError(\"User rejected request\");\n    } catch (error) {\n      console.error(error);\n      throw new Error(\"Something went wrong\");\n    }\n  }\n  async getChainId() {\n    const networkOptions = this.magicSdkConfiguration?.network;\n    if (typeof networkOptions === \"object\") {\n      const chainID = networkOptions.chainId;\n      if (chainID) {\n        return normalizeChainId(chainID);\n      }\n    }\n    throw new Error(\"Chain ID is not defined\");\n  }\n  initializeMagicSDK() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      ...this.magicSdkConfiguration,\n      extensions: [new OAuthExtension()]\n    };\n    if (chainId) {\n      const chain = this.chains.find(c => c.chainId === chainId);\n      if (chain) {\n        options.network = {\n          rpcUrl: chain.rpc[0] || \"\",\n          // TODO handle empty RPC array\n          chainId: chain.chainId\n        };\n      }\n    }\n    this.magicSDK = new Magic(this.magicOptions.apiKey, options);\n    this.provider = this.magicSDK.rpcProvider;\n    return this.magicSDK;\n  }\n  getMagicSDK() {\n    if (!this.magicSDK) {\n      return this.initializeMagicSDK();\n    }\n    return this.magicSDK;\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not found\");\n    }\n    if (_classPrivateFieldGet(this, _connectedChainId) !== chainId) {\n      this.initializeMagicSDK({\n        chainId\n      });\n    }\n    return chain;\n  }\n}\n\nexport { MagicAuthConnector, MagicBaseConnector };\n"],
  "mappings": "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",
  "names": []
}
