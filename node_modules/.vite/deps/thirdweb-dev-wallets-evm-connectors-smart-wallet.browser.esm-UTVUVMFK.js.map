{
  "version": 3,
  "sources": ["../../@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js"],
  "sourcesContent": ["import { Celo, CeloAlfajoresTestnet, CeloBaklavaTestnet, getChainByChainId } from '@thirdweb-dev/chains';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { PaymasterAPI, calcPreVerificationGas } from '@account-abstraction/sdk';\nimport { ethers, utils, Signer, providers, BigNumber } from 'ethers';\nimport fetch from 'cross-fetch';\nimport { i as isTwUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { EntryPoint__factory } from '@account-abstraction/contracts';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { deepHexlify, packUserOp } from '@account-abstraction/utils';\nimport { getDynamicFeeData, ThirdwebSDK, LOCAL_NODE_PKEY, getChainProvider } from '@thirdweb-dev/sdk';\nimport 'eventemitter3';\n\nfunction toJSON(op) {\n  return ethers.utils.resolveProperties(op).then(userOp => Object.keys(userOp).map(key => {\n    let val = userOp[key];\n    if (typeof val !== \"string\" || !val.startsWith(\"0x\")) {\n      val = ethers.utils.hexValue(val);\n    }\n    return [key, val];\n  }).reduce((set, _ref) => {\n    let [k, v] = _ref;\n    return {\n      ...set,\n      [k]: v\n    };\n  }, {}));\n}\n\n// v0.6 userOpHash calculation\nasync function getUserOpHashV06(userOp, entryPoint, chainId) {\n  const op = await utils.resolveProperties(userOp);\n  const hashedUserOp = {\n    sender: op.sender,\n    nonce: op.nonce,\n    initCodeHash: utils.keccak256(op.initCode),\n    callDataHash: utils.keccak256(op.callData),\n    callGasLimit: op.callGasLimit,\n    verificationGasLimit: op.verificationGasLimit,\n    preVerificationGas: op.preVerificationGas,\n    maxFeePerGas: op.maxFeePerGas,\n    maxPriorityFeePerGas: op.maxPriorityFeePerGas,\n    paymasterAndDataHash: utils.keccak256(op.paymasterAndData)\n  };\n  const userOpType = {\n    components: [{\n      type: \"address\",\n      name: \"sender\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\"\n    }, {\n      type: \"bytes32\",\n      name: \"initCodeHash\"\n    }, {\n      type: \"bytes32\",\n      name: \"callDataHash\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\"\n    }, {\n      type: \"bytes32\",\n      name: \"paymasterAndDataHash\"\n    }],\n    name: \"hashedUserOp\",\n    type: \"tuple\"\n  };\n  const encoded = utils.defaultAbiCoder.encode([userOpType], [{\n    ...hashedUserOp\n  }]);\n  // remove leading word (total length) and trailing word (zero-length signature)\n\n  const userOpHash = utils.keccak256(encoded);\n  const enc = utils.defaultAbiCoder.encode([\"bytes32\", \"address\", \"uint256\"], [userOpHash, entryPoint, chainId]);\n  return utils.keccak256(enc);\n}\n\nconst SIG_SIZE = 65;\nconst DUMMY_PAYMASTER_AND_DATA = \"0x0101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000001010101010100000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\";\nclass VerifyingPaymasterAPI extends PaymasterAPI {\n  constructor(paymasterUrl, entryPoint, clientId, secretKey) {\n    super();\n    this.paymasterUrl = paymasterUrl;\n    this.entryPoint = entryPoint;\n    this.clientId = clientId;\n    this.secretKey = secretKey;\n  }\n  async getPaymasterAndData(userOp) {\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (isTwUrl(this.paymasterUrl)) {\n      if (this.secretKey && this.clientId) {\n        throw new Error(\"Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.\");\n      }\n      if (this.secretKey) {\n        headers[\"x-secret-key\"] = this.secretKey;\n      } else if (this.clientId) {\n        headers[\"x-client-id\"] = this.clientId;\n        if (typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis) {\n          headers[\"x-bundle-id\"] = globalThis.APP_BUNDLE_ID;\n        }\n      }\n\n      // Dashboard token.\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n      }\n\n      // CLI token.\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`;\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n    }\n\n    // Ask the paymaster to sign the transaction and return a valid paymasterAndData value.\n    const response = await fetch(this.paymasterUrl, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: 1,\n        method: \"pm_sponsorUserOperation\",\n        params: [await toJSON(userOp), {\n          entryPoint: this.entryPoint\n        }]\n      })\n    });\n    const res = await response.json();\n    if (!response.ok) {\n      const error = res.error || response.statusText;\n      const code = res.code || \"UNKNOWN\";\n      throw new Error(`Paymaster error: ${error}\nStatus: ${response.status}\nCode: ${code}`);\n    }\n    if (res.result) {\n      const result = res.result.paymasterAndData || res.result;\n      return result.toString();\n    } else {\n      throw new Error(`Paymaster returned no result from ${this.paymasterUrl}`);\n    }\n  }\n}\nconst getVerifyingPaymaster = (paymasterUrl, entryPoint, clientId, secretKey) => new VerifyingPaymasterAPI(paymasterUrl, entryPoint, clientId, secretKey);\n\n/**\n * This class encapsulates Ethers.js listener function and necessary UserOperation details to\n * discover a TransactionReceipt for the operation.\n *\n * TODO refactor this to a simple event listener on the entry point\n */\nclass UserOperationEventListener {\n  constructor(resolve, reject, entryPoint, sender, userOpHash, nonce, timeout) {\n    this.resolve = resolve;\n    this.reject = reject;\n    this.entryPoint = entryPoint;\n    this.sender = sender;\n    this.userOpHash = userOpHash;\n    this.nonce = nonce;\n    this.timeout = timeout;\n    _defineProperty(this, \"resolved\", false);\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.boundLisener = this.listenerCallback.bind(this);\n  }\n  start() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const filter = this.entryPoint.filters.UserOperationEvent(this.userOpHash);\n    // listener takes time... first query directly:\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      const res = await this.entryPoint.queryFilter(filter, \"latest\");\n      if (res.length > 0) {\n        void this.listenerCallback(res[0]);\n      } else {\n        this.entryPoint.once(filter, this.boundLisener);\n      }\n    }, 100);\n  }\n  stop() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.entryPoint.off(\"UserOperationEvent\", this.boundLisener);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async listenerCallback() {\n    for (var _len = arguments.length, param = new Array(_len), _key = 0; _key < _len; _key++) {\n      param[_key] = arguments[_key];\n    }\n    // TODO clean this up..\n    // eslint-disable-next-line prefer-rest-params\n    const event = arguments[arguments.length - 1];\n    if (!event.args) {\n      console.error(\"got event without args\", event);\n      return;\n    }\n    // TODO: can this happen? we register to event by userOpHash..\n    if (event.args.userOpHash !== this.userOpHash) {\n      console.log(`== event with wrong userOpHash: sender/nonce: event.${event.args.sender}@${event.args.nonce.toString()}!= userOp.${this.sender}@${parseInt(this.nonce?.toString())}`);\n      return;\n    }\n    const transactionReceipt = await event.getTransactionReceipt();\n\n    // before returning the receipt, update the status from the event.\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!event.args.success) {\n      await this.extractFailureReason(transactionReceipt);\n    }\n    this.stop();\n    this.resolve(transactionReceipt);\n    this.resolved = true;\n  }\n  async extractFailureReason(receipt) {\n    receipt.status = 0;\n    const revertReasonEvents = await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash, this.sender), receipt.blockHash);\n    if (revertReasonEvents[0]) {\n      let message = revertReasonEvents[0].args.revertReason;\n      if (message.startsWith(\"0x08c379a0\")) {\n        // Error(string)\n        message = utils.defaultAbiCoder.decode([\"string\"], \"0x\" + message.substring(10)).toString();\n      }\n      this.reject(new Error(`UserOp failed with reason: ${message}`));\n    }\n  }\n}\n\nclass ERC4337EthersSigner extends Signer {\n  // TODO: we have 'erc4337provider', remove shared dependencies or avoid two-way reference\n  constructor(config, originalSigner, erc4337provider, httpRpcClient, smartAccountAPI) {\n    super();\n    utils.defineReadOnly(this, \"provider\", erc4337provider);\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.erc4337provider = erc4337provider;\n    this.httpRpcClient = httpRpcClient;\n    this.smartAccountAPI = smartAccountAPI;\n  }\n  // This one is called by Contract. It signs the request and passes in to Provider to be sent.\n  async sendTransaction(transaction) {\n    let batched = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const tx = await ethers.utils.resolveProperties(transaction);\n    await this.verifyAllNecessaryFields(tx);\n    const userOperation = await this.smartAccountAPI.createSignedUserOp({\n      target: tx.to || \"\",\n      data: tx.data?.toString() || \"0x\",\n      value: tx.value,\n      gasLimit: tx.gasLimit\n    }, batched);\n    const transactionResponse = await this.erc4337provider.constructUserOpTransactionResponse(userOperation);\n    try {\n      await this.httpRpcClient.sendUserOpToBundler(userOperation);\n    } catch (error) {\n      throw this.unwrapError(error);\n    }\n    // TODO: handle errors - transaction that is \"rejected\" by bundler is _not likely_ to ever resolve its \"wait()\"\n    return transactionResponse;\n  }\n  unwrapError(errorIn) {\n    try {\n      let errorMsg = \"Unknown Error\";\n      if (errorIn.error) {\n        errorMsg = `The bundler has failed to include UserOperation in a batch: ${errorIn.error}`;\n      } else if (errorIn.body && typeof errorIn.body === \"string\") {\n        const errorBody = JSON.parse(errorIn.body);\n        const errorStatus = errorIn.status || \"UNKNOWN\";\n        const errorCode = errorBody?.code || \"UNKNOWN\";\n        let failedOpMessage = errorBody?.error?.message || errorBody?.error?.data || errorBody?.error || errorIn.reason;\n        if (failedOpMessage?.includes(\"FailedOp\")) {\n          let paymasterInfo = \"\";\n          // TODO: better error extraction methods will be needed\n          const matched = failedOpMessage.match(/FailedOp\\((.*)\\)/);\n          if (matched) {\n            const split = matched[1].split(\",\");\n            paymasterInfo = `(paymaster address: ${split[1]})`;\n            failedOpMessage = split[2];\n          }\n          errorMsg = `The bundler has failed to include UserOperation in a batch: ${failedOpMessage} ${paymasterInfo}`;\n        } else {\n          errorMsg = `RPC error: ${failedOpMessage}\nStatus: ${errorStatus}\nCode: ${errorCode}`;\n        }\n      }\n      const error = new Error(errorMsg);\n      error.stack = errorIn.stack;\n      return error;\n    } catch (error) {}\n    return errorIn;\n  }\n  async verifyAllNecessaryFields(transactionRequest) {\n    if (!transactionRequest.to) {\n      throw new Error(\"Missing call target\");\n    }\n    if (!transactionRequest.data && !transactionRequest.value) {\n      // TBD: banning no-op UserOps seems to make sense on provider level\n      throw new Error(\"Missing call data or value\");\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  connect(provider) {\n    throw new Error(\"changing providers is not supported\");\n  }\n  async getAddress() {\n    if (!this.address) {\n      this.address = await this.erc4337provider.getSenderAccountAddress();\n    }\n    return this.address;\n  }\n  async signMessage(message) {\n    const isNotDeployed = await this.smartAccountAPI.checkAccountPhantom();\n    if (isNotDeployed) {\n      console.log(\"Account contract not deployed yet. Deploying account before signing message\");\n      const tx = await this.sendTransaction({\n        to: await this.getAddress(),\n        data: \"0x\"\n      });\n      await tx.wait();\n    }\n    return await this.originalSigner.signMessage(message);\n  }\n  async signTransaction(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transaction) {\n    throw new Error(\"not implemented\");\n  }\n}\n\nclass ERC4337EthersProvider extends providers.BaseProvider {\n  constructor(chainId, config, originalSigner, originalProvider, httpRpcClient, entryPoint, smartAccountAPI) {\n    super({\n      name: \"ERC-4337 Custom Network\",\n      chainId\n    });\n    this.chainId = chainId;\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.originalProvider = originalProvider;\n    this.httpRpcClient = httpRpcClient;\n    this.entryPoint = entryPoint;\n    this.smartAccountAPI = smartAccountAPI;\n    this.signer = new ERC4337EthersSigner(config, originalSigner, this, httpRpcClient, smartAccountAPI);\n  }\n\n  /**\n   * finish intializing the provider.\n   * MUST be called after construction, before using the provider.\n   */\n  async init() {\n    // await this.httpRpcClient.validateChainId()\n    this.initializedBlockNumber = await this.originalProvider.getBlockNumber();\n    await this.smartAccountAPI.init();\n    // await this.signer.init()\n    return this;\n  }\n  getSigner() {\n    return this.signer;\n  }\n  async perform(method, params) {\n    if (method === \"sendTransaction\" || method === \"getTransactionReceipt\") {\n      // TODO: do we need 'perform' method to be available at all?\n      // there is nobody out there to use it for ERC-4337 methods yet, we have nothing to override in fact.\n      throw new Error(\"Should not get here. Investigate.\");\n    }\n    if (method === \"estimateGas\") {\n      // hijack this to estimate gas from the entrypoint instead\n      const {\n        callGasLimit\n      } = await this.smartAccountAPI.encodeUserOpCallDataAndGasLimit({\n        target: params.transaction.to,\n        data: params.transaction.data,\n        value: params.transaction.value,\n        gasLimit: params.transaction.gasLimit\n      }, false // TODO check this\n      );\n\n      return callGasLimit;\n    }\n    return await this.originalProvider.perform(method, params);\n  }\n  async getTransaction(transactionHash) {\n    // TODO\n    return await super.getTransaction(transactionHash);\n  }\n  async getTransactionReceipt(transactionHash) {\n    const userOpHash = await transactionHash;\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, sender, userOpHash).start();\n    });\n  }\n  async getSenderAccountAddress() {\n    return await this.smartAccountAPI.getAccountAddress();\n  }\n  async waitForTransaction(transactionHash, confirmations, timeout) {\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      const listener = new UserOperationEventListener(resolve, reject, this.entryPoint, sender, transactionHash, undefined, timeout);\n      listener.start();\n    });\n  }\n\n  // fabricate a response in a format usable by ethers users...\n  async constructUserOpTransactionResponse(userOp1) {\n    const userOp = await utils.resolveProperties(userOp1);\n    const userOpHash = await this.smartAccountAPI.getUserOpHash(userOp);\n    const waitForUserOp = async () => await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, userOp.sender, userOpHash, userOp.nonce).start();\n    });\n    return {\n      hash: userOpHash,\n      confirmations: 0,\n      from: userOp.sender,\n      nonce: BigNumber.from(userOp.nonce).toNumber(),\n      gasLimit: BigNumber.from(userOp.callGasLimit),\n      // ??\n      value: BigNumber.from(0),\n      data: utils.hexValue(userOp.callData),\n      // should extract the actual called method from this \"execFromEntryPoint()\" call\n      chainId: this.chainId,\n      wait: async confirmations => {\n        const transactionReceipt = await waitForUserOp();\n        if (userOp.initCode.length !== 0) {\n          // checking if the wallet has been deployed by the transaction; it must be if we are here\n          await this.smartAccountAPI.checkAccountPhantom();\n        }\n        return transactionReceipt;\n      }\n    };\n  }\n  async detectNetwork() {\n    return this.originalProvider.detectNetwork();\n  }\n}\n\nvar pkg = {\n\tname: \"@thirdweb-dev/wallets\",\n\tversion: \"1.3.5\",\n\tmain: \"dist/thirdweb-dev-wallets.cjs.js\",\n\tmodule: \"dist/thirdweb-dev-wallets.esm.js\",\n\ttypes: \"dist/thirdweb-dev-wallets.cjs.d.ts\",\n\tbrowser: {\n\t\t\"./dist/thirdweb-dev-wallets.esm.js\": \"./dist/thirdweb-dev-wallets.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./dist/thirdweb-dev-wallets.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/thirdweb-dev-wallets.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/thirdweb-dev-wallets.cjs.js\"\n\t\t},\n\t\t\"./evm\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/dist/thirdweb-dev-wallets-evm.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/dist/thirdweb-dev-wallets-evm.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/dist/thirdweb-dev-wallets-evm.cjs.js\"\n\t\t},\n\t\t\"./solana\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/dist/thirdweb-dev-wallets-solana.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/dist/thirdweb-dev-wallets-solana.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/dist/thirdweb-dev-wallets-solana.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/base\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/safe\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/frame\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/magic\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/trust\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/blocto\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/ethers\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/zerion\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/aws-kms\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/gcp-kms\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/phantom\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/base\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/abstract\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/injected\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/metamask\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/keypair\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/private-key\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/local-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/paper-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/smart-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/safe\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/frame\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/magic\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/paper\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/trust\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/rainbow-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/wallet-connect\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/private-key\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/blocto\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/zerion\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/coinbase-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/embedded-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/phantom\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/rainbow\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/injected\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/metamask\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/local-wallet-node\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/wallet-connect-v1\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/aws-secrets-manager\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/local-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/smart-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/wallet-connect\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/coinbase-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/embedded-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/wallet-connect-v1\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/embedded-wallet/implementations\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\trepository: \"https://github.com/thirdweb-dev/js/tree/main/packages/wallets\",\n\tlicense: \"Apache-2.0\",\n\tbugs: {\n\t\turl: \"https://github.com/thirdweb-dev/js/issues\"\n\t},\n\tauthor: \"thirdweb eng <eng@thirdweb.com>\",\n\tfiles: [\n\t\t\"dist/\",\n\t\t\"evm/\",\n\t\t\"solana/\"\n\t],\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"index.ts\",\n\t\t\t\"evm/index.ts\",\n\t\t\t\"evm/connectors/*/index.ts\",\n\t\t\t\"evm/connectors/embedded-wallet/implementations/index.ts\",\n\t\t\t\"evm/wallets/**\",\n\t\t\t\"solana/index.ts\",\n\t\t\t\"solana/wallets/**\"\n\t\t],\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\"\n\t\t\t]\n\t\t}\n\t},\n\tsideEffects: false,\n\tdependencies: {\n\t\t\"@account-abstraction/contracts\": \"^0.5.0\",\n\t\t\"@account-abstraction/sdk\": \"^0.5.0\",\n\t\t\"@account-abstraction/utils\": \"^0.5.0\",\n\t\t\"@blocto/sdk\": \"^0.5.4\",\n\t\t\"@coinbase/wallet-sdk\": \"^3.7.1\",\n\t\t\"@magic-ext/connect\": \"^6.7.2\",\n\t\t\"@magic-ext/oauth\": \"^7.6.2\",\n\t\t\"@magic-sdk/provider\": \"^13.6.2\",\n\t\t\"@paperxyz/embedded-wallet-service-sdk\": \"^1.2.4\",\n\t\t\"@paperxyz/sdk-common-utilities\": \"^0.1.0\",\n\t\t\"@safe-global/safe-core-sdk\": \"^3.3.4\",\n\t\t\"@safe-global/safe-ethers-adapters\": \"0.1.0-alpha.17\",\n\t\t\"@safe-global/safe-ethers-lib\": \"^1.9.4\",\n\t\t\"@thirdweb-dev/chains\": \"workspace:*\",\n\t\t\"@thirdweb-dev/contracts-js\": \"workspace:*\",\n\t\t\"@thirdweb-dev/sdk\": \"workspace:*\",\n\t\t\"@walletconnect/core\": \"^2.9.1\",\n\t\t\"@walletconnect/ethereum-provider\": \"^2.9.1\",\n\t\t\"@walletconnect/jsonrpc-utils\": \"^1.0.8\",\n\t\t\"@walletconnect/modal\": \"^2.6.1\",\n\t\t\"@walletconnect/types\": \"^2.9.1\",\n\t\t\"@walletconnect/utils\": \"^2.9.1\",\n\t\t\"@walletconnect/web3wallet\": \"^1.8.7\",\n\t\tbuffer: \"^6.0.3\",\n\t\t\"cross-fetch\": \"^3.1.8\",\n\t\t\"crypto-js\": \"^4.1.1\",\n\t\t\"eth-provider\": \"^0.13.6\",\n\t\teventemitter3: \"^5.0.1\",\n\t\t\"magic-sdk\": \"^13.6.2\",\n\t\t\"web3-core\": \"1.5.2\"\n\t},\n\tpeerDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.256.0\",\n\t\t\"@noble/ed25519\": \"^1.7.1\",\n\t\t\"@solana/web3.js\": \"^1.73.0\",\n\t\tbs58: \"^5.0.0\",\n\t\tethers: \"^5.7.2\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\t\"ethers-gcp-kms-signer\": \"^1.1.6\",\n\t\ttweetnacl: \"^1.0.3\"\n\t},\n\tpeerDependenciesMeta: {\n\t\ttweetnacl: {\n\t\t\toptional: true\n\t\t},\n\t\t\"@aws-sdk/client-secrets-manager\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"ethers-aws-kms-signer\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@noble/ed25519\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@solana/web3.js\": {\n\t\t\toptional: true\n\t\t},\n\t\tbs58: {\n\t\t\toptional: true\n\t\t},\n\t\tethers: {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.378.0\",\n\t\t\"@babel/plugin-proposal-class-properties\": \"7.18.6\",\n\t\t\"@babel/plugin-transform-flow-strip-types\": \"^7.22.5\",\n\t\t\"@babel/plugin-transform-private-methods\": \"7.22.5\",\n\t\t\"@noble/ed25519\": \"^1.7.1\",\n\t\t\"@preconstruct/cli\": \"2.7.0\",\n\t\t\"@solana/web3.js\": \"^1.62.0\",\n\t\t\"@thirdweb-dev/tsconfig\": \"workspace:*\",\n\t\t\"@types/crypto-js\": \"^4.1.1\",\n\t\tabitype: \"^0.2.5\",\n\t\t\"babel-plugin-transform-inline-environment-variables\": \"^0.4.4\",\n\t\tbs58: \"^5.0.0\",\n\t\t\"cross-env\": \"^7.0.3\",\n\t\t\"eslint-config-thirdweb\": \"workspace:*\",\n\t\t\"eslint-plugin-better-tree-shaking\": \"0.0.3\",\n\t\t\"ethereum-provider\": \"^0.7.7\",\n\t\tethers: \"^5.7.2\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\t\"ethers-gcp-kms-signer\": \"^1.1.6\",\n\t\ttweetnacl: \"^1.0.3\",\n\t\ttypescript: \"^5.1.6\"\n\t},\n\tscripts: {\n\t\tformat: \"prettier --write 'src/**/*'\",\n\t\tlint: \"eslint src/\",\n\t\tfix: \"eslint src/ --fix\",\n\t\tclean: \"rm -rf dist/\",\n\t\tbuild: \"tsc && cross-env THIRDWEB_EWS_SDK_VERSION=$npm_package_version preconstruct build\",\n\t\t\"preconstruct:fix\": \"preconstruct fix\",\n\t\tpush: \"yalc push\"\n\t}\n};\n\nclass HttpRpcClient {\n  constructor(bundlerUrl, entryPointAddress, chainId, clientId, secretKey) {\n    this.bundlerUrl = bundlerUrl;\n    this.entryPointAddress = entryPointAddress;\n    this.chainId = chainId;\n    const headers = {};\n    if (isTwUrl(this.bundlerUrl)) {\n      const bundleId = typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? globalThis.APP_BUNDLE_ID : undefined;\n      if (secretKey) {\n        headers[\"x-secret-key\"] = secretKey;\n      } else if (clientId) {\n        headers[\"x-client-id\"] = clientId;\n        if (bundleId) {\n          headers[\"x-bundle-id\"] = bundleId;\n        }\n      }\n\n      // Dashboard token\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n      }\n\n      // CLI token\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`;\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n      headers[\"x-sdk-version\"] = pkg.version;\n      headers[\"x-sdk-name\"] = pkg.name;\n      headers[\"x-sdk-platform\"] = bundleId ? \"react-native\" : window.bridge !== undefined ? \"webGL\" : \"browser\" ;\n    }\n    this.userOpJsonRpcProvider = new providers.JsonRpcProvider({\n      url: this.bundlerUrl,\n      headers\n    }, {\n      name: \"Connected bundler network\",\n      chainId\n    });\n    this.initializing = this.validateChainId();\n  }\n  async validateChainId() {\n    // validate chainId is in sync with expected chainid\n    const chain = await this.userOpJsonRpcProvider.send(\"eth_chainId\", []);\n    const bundlerChain = parseInt(chain);\n    if (bundlerChain !== this.chainId) {\n      throw new Error(`bundler ${this.bundlerUrl} is on chainId ${bundlerChain}, but provider is on chainId ${this.chainId}`);\n    }\n  }\n\n  /**\n   * send a UserOperation to the bundler\n   * @param userOp1\n   * @return userOpHash the id of this operation, for getUserOperationTransaction\n   */\n  async sendUserOpToBundler(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_sendUserOperation\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_sendUserOperation\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async estimateUserOpGas(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_estimateUserOperationGas\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_estimateUserOperationGas\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async printUserOperation(method, _ref) {\n    {\n      return;\n    }\n  }\n}\n\n/**\n * wrap an existing provider to tunnel requests through Account Abstraction.\n * @param originalProvider the normal provider\n * @param config see ClientConfig for more info\n * @param originalSigner use this signer as the owner. of this wallet. By default, use the provider's signer\n */\nasync function create4337Provider(config, accountApi, originalProvider) {\n  const entryPoint = EntryPoint__factory.connect(config.entryPointAddress, originalProvider);\n  const chainId = (await originalProvider.getNetwork()).chainId;\n  const httpRpcClient = new HttpRpcClient(config.bundlerUrl, config.entryPointAddress, chainId, config.clientId, config.secretKey);\n  return await new ERC4337EthersProvider(chainId, config, config.localSigner, originalProvider, httpRpcClient, entryPoint, accountApi).init();\n}\n\nconst ENTRYPOINT_ADDRESS = \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"; // v0.6\n\nconst ACCOUNT_CORE_ABI = [{\n  type: \"constructor\",\n  name: \"\",\n  inputs: [{\n    type: \"address\",\n    name: \"_entrypoint\",\n    internalType: \"contract IEntryPoint\"\n  }, {\n    type: \"address\",\n    name: \"_factory\",\n    internalType: \"address\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"event\",\n  name: \"AdminUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"isAdmin\",\n    indexed: false,\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"ContractURIUpdated\",\n  inputs: [{\n    type: \"string\",\n    name: \"prevURI\",\n    indexed: false,\n    internalType: \"string\"\n  }, {\n    type: \"string\",\n    name: \"newURI\",\n    indexed: false,\n    internalType: \"string\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"Initialized\",\n  inputs: [{\n    type: \"uint8\",\n    name: \"version\",\n    indexed: false,\n    internalType: \"uint8\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"SignerPermissionsUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"authorizingSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"targetSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"permissions\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    indexed: false,\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"function\",\n  name: \"addDeposit\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"contractURI\",\n  inputs: [],\n  outputs: [{\n    type: \"string\",\n    name: \"\",\n    internalType: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"entryPoint\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"contract IEntryPoint\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"execute\",\n  inputs: [{\n    type: \"address\",\n    name: \"_target\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"_value\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"_calldata\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"executeBatch\",\n  inputs: [{\n    type: \"address[]\",\n    name: \"_target\",\n    internalType: \"address[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"_value\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes[]\",\n    name: \"_calldata\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"factory\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllActiveSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllAdmins\",\n  inputs: [],\n  outputs: [{\n    type: \"address[]\",\n    name: \"\",\n    internalType: \"address[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getDeposit\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getNonce\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getPermissionsForSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"tuple\",\n    name: \"\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"initialize\",\n  inputs: [{\n    type: \"address\",\n    name: \"_defaultAdmin\",\n    internalType: \"address\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"isActiveSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSignature\",\n  inputs: [{\n    type: \"bytes32\",\n    name: \"_hash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"magicValue\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"_signer\",\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"_userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"multicall\",\n  inputs: [{\n    type: \"bytes[]\",\n    name: \"data\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [{\n    type: \"bytes[]\",\n    name: \"results\",\n    internalType: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155BatchReceived\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC721Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"_isAdmin\",\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setContractURI\",\n  inputs: [{\n    type: \"string\",\n    name: \"_uri\",\n    internalType: \"string\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setPermissionsForSigner\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"_req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"supportsInterface\",\n  inputs: [{\n    type: \"bytes4\",\n    name: \"interfaceId\",\n    internalType: \"bytes4\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"validateUserOp\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }, {\n    type: \"bytes32\",\n    name: \"userOpHash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"uint256\",\n    name: \"missingAccountFunds\",\n    internalType: \"uint256\"\n  }],\n  outputs: [{\n    type: \"uint256\",\n    name: \"validationData\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"verifySignerPermissionRequest\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"success\",\n    internalType: \"bool\"\n  }, {\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"withdrawDepositTo\",\n  inputs: [{\n    type: \"address\",\n    name: \"withdrawAddress\",\n    internalType: \"address payable\"\n  }, {\n    type: \"uint256\",\n    name: \"amount\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"receive\",\n  name: \"\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n * Base class for all Smart Wallet ERC-4337 Clients to implement.\n * Subclass should inherit 5 methods to support a specific wallet contract:\n *\n * - getAccountInitCode - return the value to put into the \"initCode\" field, if the account is not yet deployed. should create the account instance using a factory contract.\n * - getNonce - return current account's nonce value\n * - encodeExecute - encode the call from entryPoint through our account to the target contract.\n * - signUserOpHash - sign the hash of a UserOp.\n *\n * The user can use the following APIs:\n * - createUnsignedUserOp - given \"target\" and \"calldata\", fill userOp to perform that operation from the account.\n * - createSignedUserOp - helper to call the above createUnsignedUserOp, and then extract the userOpHash and sign it\n */\nclass BaseAccountAPI {\n  // entryPoint connected to \"zero\" address. allowed to make static calls (e.g. to getSenderAddress)\n\n  /**\n   * base constructor.\n   * subclass SHOULD add parameters that define the owner (signer) of this wallet\n   */\n  constructor(params) {\n    _defineProperty(this, \"isPhantom\", true);\n    this.provider = params.provider;\n    this.overheads = params.overheads;\n    this.entryPointAddress = params.entryPointAddress;\n    this.accountAddress = params.accountAddress;\n    this.paymasterAPI = params.paymasterAPI;\n\n    // factory \"connect\" define the contract address. the contract \"connect\" defines the \"from\" address.\n    this.entryPointView = EntryPoint__factory.connect(params.entryPointAddress, params.provider).connect(ethers.constants.AddressZero);\n  }\n  async init() {\n    if ((await this.provider.getCode(this.entryPointAddress)) === \"0x\") {\n      throw new Error(`entryPoint not deployed at ${this.entryPointAddress}`);\n    }\n    await this.getAccountAddress();\n    return this;\n  }\n\n  /**\n   * return the value to put into the \"initCode\" field, if the contract is not yet deployed.\n   * this value holds the \"factory\" address, followed by this account's information\n   */\n\n  /**\n   * return current account's nonce.\n   */\n\n  /**\n   * encode the call from entryPoint through our account to the target contract.\n   * @param target\n   * @param value\n   * @param data\n   */\n\n  /**\n   * sign a userOp's hash (userOpHash).\n   * @param userOpHash\n   */\n\n  /**\n   * check if the contract is already deployed.\n   */\n  async checkAccountPhantom() {\n    if (!this.isPhantom) {\n      // already deployed. no need to check anymore.\n      return this.isPhantom;\n    }\n    const senderAddressCode = await this.provider.getCode(this.getAccountAddress());\n    if (senderAddressCode.length > 2) {\n      this.isPhantom = false;\n    }\n    return this.isPhantom;\n  }\n\n  /**\n   * calculate the account address even before it is deployed\n   */\n  async getCounterFactualAddress() {\n    const initCode = this.getAccountInitCode();\n    // use entryPoint to query account address (factory can provide a helper method to do the same, but\n    // this method attempts to be generic\n    try {\n      await this.entryPointView.callStatic.getSenderAddress(initCode);\n    } catch (e) {\n      return e.errorArgs.sender;\n    }\n    throw new Error(\"must handle revert\");\n  }\n\n  /**\n   * return initCode value to into the UserOp.\n   * (either deployment code, or empty hex if contract already deployed)\n   */\n  async getInitCode() {\n    if (await this.checkAccountPhantom()) {\n      return await this.getAccountInitCode();\n    }\n    return \"0x\";\n  }\n\n  /**\n   * return maximum gas used for verification.\n   * NOTE: createUnsignedUserOp will add to this value the cost of creation, if the contract is not yet created.\n   */\n  async getVerificationGasLimit() {\n    return 100000;\n  }\n\n  /**\n   * should cover cost of putting calldata on-chain, and some overhead.\n   * actual overhead depends on the expected bundle size\n   */\n  async getPreVerificationGas(userOp) {\n    const p = await utils.resolveProperties(userOp);\n    return calcPreVerificationGas(p, this.overheads);\n  }\n\n  /**\n   * ABI-encode a user operation. used for calldata cost estimation\n   */\n  packUserOp(userOp) {\n    return packUserOp(userOp, false);\n  }\n  async encodeUserOpCallDataAndGasLimit(detailsForUserOp, batched) {\n    function parseNumber(a) {\n      if (!a || a === \"\") {\n        return null;\n      }\n      return BigNumber.from(a.toString());\n    }\n    const value = parseNumber(detailsForUserOp.value) ?? BigNumber.from(0);\n    const callData = batched ? detailsForUserOp.data : await this.encodeExecute(detailsForUserOp.target, value, detailsForUserOp.data);\n    let callGasLimit;\n    const isPhantom = await this.checkAccountPhantom();\n    if (isPhantom) {\n      // when the account is not deployed yet, we simulate the call to the target contract directly\n      callGasLimit = await this.provider.estimateGas({\n        from: this.getAccountAddress(),\n        to: detailsForUserOp.target,\n        data: detailsForUserOp.data\n      });\n      // add 20% overhead for entrypoint checks\n      callGasLimit = callGasLimit.mul(120).div(100);\n      // if the estimation is too low, we use a fixed value of 500k\n      if (callGasLimit.lt(30000)) {\n        callGasLimit = BigNumber.from(500000);\n      }\n    } else {\n      callGasLimit = parseNumber(detailsForUserOp.gasLimit) ?? (await this.provider.estimateGas({\n        from: this.entryPointAddress,\n        to: this.getAccountAddress(),\n        data: callData\n      }));\n    }\n    return {\n      callData,\n      callGasLimit\n    };\n  }\n\n  /**\n   * return userOpHash for signing.\n   * This value matches entryPoint.getUserOpHash (calculated off-chain, to avoid a view call)\n   * @param userOp userOperation, (signature field ignored)\n   */\n  async getUserOpHash(userOp) {\n    const chainId = await this.provider.getNetwork().then(net => net.chainId);\n    return getUserOpHashV06(userOp, this.entryPointAddress, chainId);\n  }\n\n  /**\n   * return the account's address.\n   * this value is valid even before deploying the contract.\n   */\n  async getAccountAddress() {\n    if (!this.senderAddress) {\n      if (this.accountAddress) {\n        this.senderAddress = this.accountAddress;\n      } else {\n        this.senderAddress = await this.getCounterFactualAddress();\n      }\n    }\n    return this.senderAddress;\n  }\n  async estimateCreationGas(initCode) {\n    if (!initCode || initCode === \"0x\") {\n      return 0;\n    }\n    const deployerAddress = initCode.substring(0, 42);\n    const deployerCallData = \"0x\" + initCode.substring(42);\n    return await this.provider.estimateGas({\n      to: deployerAddress,\n      data: deployerCallData\n    });\n  }\n\n  /**\n   * create a UserOperation, filling all details (except signature)\n   * - if account is not yet created, add initCode to deploy it.\n   * - if gas or nonce are missing, read them from the chain (note that we can't fill gaslimit before the account is created)\n   * @param info\n   */\n  async createUnsignedUserOp(info, batched) {\n    const {\n      callData,\n      callGasLimit\n    } = await this.encodeUserOpCallDataAndGasLimit(info, batched);\n    const initCode = await this.getInitCode();\n    const initGas = await this.estimateCreationGas(initCode);\n    const verificationGasLimit = BigNumber.from(await this.getVerificationGasLimit()).add(initGas);\n    let {\n      maxFeePerGas,\n      maxPriorityFeePerGas\n    } = info;\n    if (!maxFeePerGas || !maxPriorityFeePerGas) {\n      const feeData = await getDynamicFeeData(this.provider);\n      if (!maxPriorityFeePerGas) {\n        maxPriorityFeePerGas = feeData.maxPriorityFeePerGas ?? undefined;\n      }\n      if (!maxFeePerGas) {\n        maxFeePerGas = feeData.maxFeePerGas ?? undefined;\n        const network = await this.provider.getNetwork();\n        const chainId = network.chainId;\n        if (chainId === Celo.chainId || chainId === CeloAlfajoresTestnet.chainId || chainId === CeloBaklavaTestnet.chainId) {\n          maxPriorityFeePerGas = maxFeePerGas;\n        }\n      }\n    }\n    const partialUserOp = {\n      sender: this.getAccountAddress(),\n      nonce: info.nonce ?? this.getNonce(),\n      initCode,\n      callData,\n      callGasLimit,\n      verificationGasLimit,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      paymasterAndData: \"0x\"\n    };\n    let paymasterAndData;\n    let userOp = partialUserOp;\n    if (this.paymasterAPI) {\n      // fill (partial) preVerificationGas (all except the cost of the generated paymasterAndData)\n      try {\n        // userOp.preVerificationGas contains a promise that will resolve to an error.\n        await ethers.utils.resolveProperties(userOp);\n        // eslint-disable-next-line no-empty\n      } catch (_) {}\n      const pmOp = {\n        sender: userOp.sender,\n        nonce: userOp.nonce,\n        initCode: userOp.initCode,\n        callData: userOp.callData,\n        callGasLimit: userOp.callGasLimit,\n        verificationGasLimit: userOp.verificationGasLimit,\n        maxFeePerGas: userOp.maxFeePerGas,\n        maxPriorityFeePerGas: userOp.maxPriorityFeePerGas,\n        // A dummy value here is required in order to calculate a correct preVerificationGas value.\n        paymasterAndData: DUMMY_PAYMASTER_AND_DATA,\n        signature: ethers.utils.hexlify(Buffer.alloc(SIG_SIZE, 1))\n      };\n      userOp = await ethers.utils.resolveProperties(pmOp);\n      const preVerificationGas = calcPreVerificationGas(userOp);\n      userOp.preVerificationGas = preVerificationGas;\n      paymasterAndData = await this.paymasterAPI.getPaymasterAndData(userOp);\n      if (paymasterAndData === \"0x\") {\n        paymasterAndData = undefined;\n      }\n    }\n    if (paymasterAndData) {\n      userOp.paymasterAndData = paymasterAndData;\n      return {\n        ...userOp,\n        signature: \"\"\n      };\n    } else {\n      const modifiedOp = {\n        ...userOp,\n        paymasterAndData: \"0x\"\n      };\n      modifiedOp.preVerificationGas = await this.getPreVerificationGas(modifiedOp);\n      return {\n        ...modifiedOp,\n        signature: \"\"\n      };\n    }\n  }\n\n  /**\n   * Sign the filled userOp.\n   * @param userOp the UserOperation to sign (with signature field ignored)\n   */\n  async signUserOp(userOp) {\n    const userOpHash = await this.getUserOpHash(userOp);\n    const signature = this.signUserOpHash(userOpHash);\n    return {\n      ...userOp,\n      signature\n    };\n  }\n\n  /**\n   * helper method: create and sign a user operation.\n   * @param info transaction details for the userOp\n   */\n  async createSignedUserOp(info, batched) {\n    return await this.signUserOp(await this.createUnsignedUserOp(info, batched));\n  }\n\n  /**\n   * get the transaction that has this userOpHash mined, or null if not found\n   * @param userOpHash returned by sendUserOpToBundler (or by getUserOpHash..)\n   * @param timeout stop waiting after this timeout\n   * @param interval time to wait between polls.\n   * @return the transactionHash this userOp was mined, or null if not found.\n   */\n  async getUserOpReceipt(userOpHash) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30000;\n    let interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n    const endtime = Date.now() + timeout;\n    while (Date.now() < endtime) {\n      const events = await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(userOpHash));\n      if (events[0]) {\n        return events[0].transactionHash;\n      }\n      await new Promise(resolve => setTimeout(resolve, interval));\n    }\n    return null;\n  }\n}\n\nclass AccountAPI extends BaseAccountAPI {\n  constructor(params, originalProvider) {\n    super({\n      ...params,\n      provider: originalProvider\n    });\n    this.params = params;\n    // Technically dont need the signer here, but we need to encode/estimate gas with it so a signer is required\n    // We don't want to use the localSigner directly since it might be connected to another chain\n    // so we just use the public hardhat pkey instead\n    this.sdk = ThirdwebSDK.fromPrivateKey(LOCAL_NODE_PKEY, params.chain, {\n      clientId: params.clientId,\n      secretKey: params.secretKey\n    });\n  }\n  async getChainId() {\n    return await this.provider.getNetwork().then(n => n.chainId);\n  }\n  async getAccountContract() {\n    if (!this.accountContract) {\n      if (this.params.accountInfo?.abi) {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), this.params.accountInfo.abi);\n      } else {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), ACCOUNT_CORE_ABI);\n      }\n    }\n    return this.accountContract;\n  }\n  async getAccountInitCode() {\n    const factory = await this.getFactoryContract();\n    console.log(\"Deploying smart wallet via factory\");\n    const localSigner = await this.params.localSigner.getAddress();\n    const tx = await this.params.factoryInfo.createAccount(factory, localSigner);\n    try {\n      console.log(\"Cost to deploy smart wallet: \", (await tx.estimateGasCost()).ether, \"ETH\");\n    } catch (e) {\n      console.error(\"Cost to deploy smart wallet: unknown\", e);\n    }\n    return utils.hexConcat([factory.getAddress(), tx.encode()]);\n  }\n  async getFactoryContract() {\n    if (this.factoryContract) {\n      return this.factoryContract;\n    }\n    if (this.params.factoryInfo?.abi) {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress, this.params.factoryInfo.abi);\n    } else {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress);\n    }\n    return this.factoryContract;\n  }\n  async getCounterFactualAddress() {\n    if (this.params.accountAddress) {\n      return this.params.accountAddress;\n    }\n    const factory = await this.getFactoryContract();\n    const localSigner = await this.params.localSigner.getAddress();\n    return this.params.factoryInfo.getAccountAddress(factory, localSigner);\n  }\n  async getNonce() {\n    if (await this.checkAccountPhantom()) {\n      return BigNumber.from(0);\n    }\n    const accountContract = await this.getAccountContract();\n    return this.params.accountInfo.getNonce(accountContract);\n  }\n  async encodeExecute(target, value, data) {\n    const accountContract = await this.getAccountContract();\n    const tx = await this.params.accountInfo.execute(accountContract, target, value, data);\n    return tx.encode();\n  }\n  async encodeExecuteBatch(targets, values, datas) {\n    const accountContract = await this.getAccountContract();\n    const tx = await accountContract.prepare(\"executeBatch\", [targets, values, datas]);\n    return tx.encode();\n  }\n  async signUserOpHash(userOpHash) {\n    return await this.params.localSigner.signMessage(utils.arrayify(userOpHash));\n  }\n  async isAcountDeployed() {\n    return !(await this.checkAccountPhantom());\n  }\n}\n\nclass SmartWalletConnector extends Connector {\n  constructor(config) {\n    super();\n    this.config = config;\n  }\n  async initialize(params) {\n    const config = this.config;\n    const originalProvider = getChainProvider(config.chain, {\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    });\n    const chainSlug = await this.getChainSlug(config.chain, originalProvider);\n    const bundlerUrl = this.config.bundlerUrl || `https://${chainSlug}.bundler.thirdweb.com`;\n    const paymasterUrl = this.config.paymasterUrl || `https://${chainSlug}.bundler.thirdweb.com`;\n    const entryPointAddress = config.entryPointAddress || ENTRYPOINT_ADDRESS;\n    const localSigner = await params.personalWallet.getSigner();\n    const providerConfig = {\n      chain: config.chain,\n      localSigner,\n      entryPointAddress,\n      bundlerUrl,\n      paymasterAPI: this.config.gasless ? this.config.paymasterAPI ? this.config.paymasterAPI : getVerifyingPaymaster(paymasterUrl, entryPointAddress, this.config.clientId, this.config.secretKey) : undefined,\n      factoryAddress: config.factoryAddress,\n      accountAddress: params.accountAddress,\n      factoryInfo: config.factoryInfo || this.defaultFactoryInfo(),\n      accountInfo: config.accountInfo || this.defaultAccountInfo(),\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    };\n    this.personalWallet = params.personalWallet;\n    const accountApi = new AccountAPI(providerConfig, originalProvider);\n    this.aaProvider = await create4337Provider(providerConfig, accountApi, originalProvider);\n    this.accountApi = accountApi;\n  }\n  async connect(connectionArgs) {\n    await this.initialize(connectionArgs);\n    return await this.getAddress();\n  }\n  getProvider() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider);\n  }\n  async getSigner() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider.getSigner());\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const address = await this.getAddress();\n      return !!address;\n    } catch (e) {\n      return false;\n    }\n  }\n  async disconnect() {\n    this.personalWallet = undefined;\n    this.aaProvider = undefined;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  async switchChain(chainId) {\n    // TODO implement chain switching\n    const provider = await this.getProvider();\n    const currentChainId = (await provider.getNetwork()).chainId;\n    if (currentChainId !== chainId) {\n      // only throw if actually trying to switch chains\n      throw new Error(\"Not supported.\");\n    }\n  }\n  setupListeners() {\n    return Promise.resolve();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateChains(chains) {}\n\n  /**\n   * Check whether the connected signer can execute a given transaction using the smart wallet.\n   * @param transaction the transaction to execute using the smart wallet.\n   * @returns whether the connected signer can execute the transaction using the smart wallet.\n   */\n  async hasPermissionToExecute(transaction) {\n    const accountContract = await this.getAccountContract();\n    const signer = await this.getSigner();\n    const signerAddress = await signer.getAddress();\n    const restrictions = (await accountContract.account.getAllSigners()).filter(item => ethers.utils.getAddress(item.signer) === ethers.utils.getAddress(signerAddress))[0]?.permissions;\n    if (!restrictions) {\n      return false;\n    }\n    return restrictions.approvedCallTargets.includes(transaction.getTarget());\n  }\n\n  /**\n   * Execute a single transaction\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async execute(transaction) {\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: transaction.getTarget(),\n      data: transaction.encode(),\n      value: await transaction.getValue()\n    });\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Execute multiple transactions in a single batch\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async executeBatch(transactions) {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    const signer = await this.getSigner();\n    const targets = transactions.map(tx => tx.getTarget());\n    const data = transactions.map(tx => tx.encode());\n    const values = transactions.map(() => BigNumber.from(0)); // TODO check if we can handle multiple values\n    const callData = await this.accountApi.encodeExecuteBatch(targets, values, data);\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: callData,\n      value: 0\n    }, true // batched tx flag\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Manually deploy the smart wallet contract. If already deployed this will throw an error.\n   * Note that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes.\n   * @returns the transaction receipt\n   */\n  async deploy() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    if (await this.accountApi.isAcountDeployed()) {\n      throw new Error(\"Smart wallet already deployed\");\n    }\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: \"0x\"\n    }, true // batched tx flag to avoid hitting the Router fallback method\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Check if the smart wallet contract is deployed\n   * @returns true if the smart wallet contract is deployed\n   */\n  async isDeployed() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return await this.accountApi.isAcountDeployed();\n  }\n  async deployIfNeeded() {\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      await this.deploy();\n    }\n  }\n  async grantPermissions(target, permissions) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantPermissions(target, permissions);\n  }\n  async revokePermissions(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAccess(target);\n  }\n  async addAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantAdminPermissions(target);\n  }\n  async removeAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAdminPermissions(target);\n  }\n  async getAllActiveSigners() {\n    const isDeployed = await this.isDeployed();\n    if (isDeployed) {\n      const accountContract = await this.getAccountContract();\n      return accountContract.account.getAllAdminsAndSigners();\n    } else {\n      const personalWallet = await this.personalWallet?.getSigner();\n      if (!personalWallet) {\n        throw new Error(\"Personal wallet not connected\");\n      }\n      return [{\n        isAdmin: true,\n        signer: await personalWallet.getAddress(),\n        permissions: {\n          startDate: new Date(0),\n          expirationDate: new Date(0),\n          nativeTokenLimitPerTransaction: BigNumber.from(0),\n          approvedCallTargets: []\n        }\n      }];\n    }\n  }\n\n  /**\n   * Get the underlying account contract of the smart wallet.\n   * @returns the account contract of the smart wallet.\n   */\n  async getAccountContract() {\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      throw new Error(\"Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.\");\n    }\n    // getting a new instance everytime\n    // to avoid caching issues pre/post deployment\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if (this.config.accountInfo?.abi) {\n      return sdk.getContract(await this.getAddress(), this.config.accountInfo.abi);\n    } else {\n      return sdk.getContract(await this.getAddress());\n    }\n  }\n\n  /**\n   * Get the underlying account factory contract of the smart wallet.\n   * @returns the account factory contract.\n   */\n  async getFactoryContract() {\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if (this.config.factoryInfo?.abi) {\n      return sdk.getContract(this.config.factoryAddress, this.config.factoryInfo.abi);\n    }\n    return sdk.getContract(this.config.factoryAddress);\n  }\n  defaultFactoryInfo() {\n    return {\n      createAccount: async (factory, owner) => {\n        return factory.prepare(\"createAccount\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n      },\n      getAccountAddress: async (factory, owner) => {\n        try {\n          return await factory.call(\"getAddress\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n        } catch (e) {\n          console.log(\"Falling back to old factory\");\n          // TODO remove after a few versions\n          return factory.call(\"getAddress\", [owner]);\n        }\n      }\n    };\n  }\n  defaultAccountInfo() {\n    return {\n      execute: async (account, target, value, data) => {\n        return account.prepare(\"execute\", [target, value, data]);\n      },\n      getNonce: async account => {\n        return account.call(\"getNonce\", []);\n      }\n    };\n  }\n  async getChainSlug(chainOrRpc, provider) {\n    if (typeof chainOrRpc === \"object\") {\n      return chainOrRpc.slug;\n    }\n    if (typeof chainOrRpc === \"number\") {\n      const chain = getChainByChainId(chainOrRpc);\n      return chain.slug;\n    }\n    if (typeof chainOrRpc === \"string\") {\n      if (chainOrRpc.startsWith(\"http\") || chainOrRpc.startsWith(\"ws\")) {\n        // if it's a url, try to get the chain id from the provider\n        const chainId = (await provider.getNetwork()).chainId;\n        const chain = getChainByChainId(chainId);\n        return chain.slug;\n      }\n      // otherwise its the network name\n      return chainOrRpc;\n    } else {\n      throw new Error(`Invalid network: ${chainOrRpc}`);\n    }\n  }\n}\n\nexport { SmartWalletConnector };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,iBAAqD;AACrD;AACA,yBAAkB;AAElB,uBAAoC;AAEpC,mBAAwC;AAIxC,SAAS,OAAO,IAAI;AAClB,SAAO,eAAO,MAAM,kBAAkB,EAAE,EAAE,KAAK,YAAU,OAAO,KAAK,MAAM,EAAE,IAAI,SAAO;AACtF,QAAI,MAAM,OAAO,GAAG;AACpB,QAAI,OAAO,QAAQ,YAAY,CAAC,IAAI,WAAW,IAAI,GAAG;AACpD,YAAM,eAAO,MAAM,SAAS,GAAG;AAAA,IACjC;AACA,WAAO,CAAC,KAAK,GAAG;AAAA,EAClB,CAAC,EAAE,OAAO,CAAC,KAAK,SAAS;AACvB,QAAI,CAAC,GAAG,CAAC,IAAI;AACb,WAAO;AAAA,MACL,GAAG;AAAA,MACH,CAAC,CAAC,GAAG;AAAA,IACP;AAAA,EACF,GAAG,CAAC,CAAC,CAAC;AACR;AAGA,eAAe,iBAAiB,QAAQ,YAAY,SAAS;AAC3D,QAAM,KAAK,MAAM,cAAM,kBAAkB,MAAM;AAC/C,QAAM,eAAe;AAAA,IACnB,QAAQ,GAAG;AAAA,IACX,OAAO,GAAG;AAAA,IACV,cAAc,cAAM,UAAU,GAAG,QAAQ;AAAA,IACzC,cAAc,cAAM,UAAU,GAAG,QAAQ;AAAA,IACzC,cAAc,GAAG;AAAA,IACjB,sBAAsB,GAAG;AAAA,IACzB,oBAAoB,GAAG;AAAA,IACvB,cAAc,GAAG;AAAA,IACjB,sBAAsB,GAAG;AAAA,IACzB,sBAAsB,cAAM,UAAU,GAAG,gBAAgB;AAAA,EAC3D;AACA,QAAM,aAAa;AAAA,IACjB,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AACA,QAAM,UAAU,cAAM,gBAAgB,OAAO,CAAC,UAAU,GAAG,CAAC;AAAA,IAC1D,GAAG;AAAA,EACL,CAAC,CAAC;AAGF,QAAM,aAAa,cAAM,UAAU,OAAO;AAC1C,QAAM,MAAM,cAAM,gBAAgB,OAAO,CAAC,WAAW,WAAW,SAAS,GAAG,CAAC,YAAY,YAAY,OAAO,CAAC;AAC7G,SAAO,cAAM,UAAU,GAAG;AAC5B;AAEA,IAAM,WAAW;AACjB,IAAM,2BAA2B;AACjC,IAAM,wBAAN,cAAoC,wBAAa;AAAA,EAC/C,YAAY,cAAc,YAAY,UAAU,WAAW;AACzD,UAAM;AACN,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,MAAM,oBAAoB,QAAQ;AAChC,UAAM,UAAU;AAAA,MACd,gBAAgB;AAAA,IAClB;AACA,QAAI,QAAQ,KAAK,YAAY,GAAG;AAC9B,UAAI,KAAK,aAAa,KAAK,UAAU;AACnC,cAAM,IAAI,MAAM,wIAAwI;AAAA,MAC1J;AACA,UAAI,KAAK,WAAW;AAClB,gBAAQ,cAAc,IAAI,KAAK;AAAA,MACjC,WAAW,KAAK,UAAU;AACxB,gBAAQ,aAAa,IAAI,KAAK;AAC9B,YAAI,OAAO,eAAe,eAAe,mBAAmB,YAAY;AACtE,kBAAQ,aAAa,IAAI,WAAW;AAAA,QACtC;AAAA,MACF;AAGA,UAAI,OAAO,eAAe,eAAe,mBAAmB,cAAc,OAAO,WAAW,kBAAkB,UAAU;AACtH,gBAAQ,eAAe,IAAI,UAAU,WAAW,aAAa;AAAA,MAC/D;AAGA,UAAI,OAAO,eAAe,eAAe,uBAAuB,cAAc,OAAO,WAAW,sBAAsB,UAAU;AAC9H,gBAAQ,eAAe,IAAI,UAAU,WAAW,iBAAiB;AACjE,gBAAQ,oBAAoB,IAAI;AAAA,MAClC;AAAA,IACF;AAGA,UAAM,WAAW,UAAM,mBAAAA,SAAM,KAAK,cAAc;AAAA,MAC9C,QAAQ;AAAA,MACR;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,QAAQ,CAAC,MAAM,OAAO,MAAM,GAAG;AAAA,UAC7B,YAAY,KAAK;AAAA,QACnB,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,UAAM,MAAM,MAAM,SAAS,KAAK;AAChC,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,QAAQ,IAAI,SAAS,SAAS;AACpC,YAAM,OAAO,IAAI,QAAQ;AACzB,YAAM,IAAI,MAAM,oBAAoB,KAAK;AAAA,UACrC,SAAS,MAAM;AAAA,QACjB,IAAI,EAAE;AAAA,IACV;AACA,QAAI,IAAI,QAAQ;AACd,YAAM,SAAS,IAAI,OAAO,oBAAoB,IAAI;AAClD,aAAO,OAAO,SAAS;AAAA,IACzB,OAAO;AACL,YAAM,IAAI,MAAM,qCAAqC,KAAK,YAAY,EAAE;AAAA,IAC1E;AAAA,EACF;AACF;AACA,IAAM,wBAAwB,CAAC,cAAc,YAAY,UAAU,cAAc,IAAI,sBAAsB,cAAc,YAAY,UAAU,SAAS;AAQxJ,IAAM,6BAAN,MAAiC;AAAA,EAC/B,YAAY,SAAS,QAAQ,YAAY,QAAQ,YAAY,OAAO,SAAS;AAC3E,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,oBAAgB,MAAM,YAAY,KAAK;AAEvC,SAAK,eAAe,KAAK,iBAAiB,KAAK,IAAI;AAAA,EACrD;AAAA,EACA,QAAQ;AAEN,UAAM,SAAS,KAAK,WAAW,QAAQ,mBAAmB,KAAK,UAAU;AAGzE,eAAW,YAAY;AACrB,YAAM,MAAM,MAAM,KAAK,WAAW,YAAY,QAAQ,QAAQ;AAC9D,UAAI,IAAI,SAAS,GAAG;AAClB,aAAK,KAAK,iBAAiB,IAAI,CAAC,CAAC;AAAA,MACnC,OAAO;AACL,aAAK,WAAW,KAAK,QAAQ,KAAK,YAAY;AAAA,MAChD;AAAA,IACF,GAAG,GAAG;AAAA,EACR;AAAA,EACA,OAAO;AAEL,SAAK,WAAW,IAAI,sBAAsB,KAAK,YAAY;AAAA,EAC7D;AAAA;AAAA,EAGA,MAAM,mBAAmB;AArM3B;AAsMI,aAAS,OAAO,UAAU,QAAQ,QAAQ,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACxF,YAAM,IAAI,IAAI,UAAU,IAAI;AAAA,IAC9B;AAGA,UAAM,QAAQ,UAAU,UAAU,SAAS,CAAC;AAC5C,QAAI,CAAC,MAAM,MAAM;AACf,cAAQ,MAAM,0BAA0B,KAAK;AAC7C;AAAA,IACF;AAEA,QAAI,MAAM,KAAK,eAAe,KAAK,YAAY;AAC7C,cAAQ,IAAI,uDAAuD,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,MAAM,SAAS,CAAC,aAAa,KAAK,MAAM,IAAI,UAAS,UAAK,UAAL,mBAAY,UAAU,CAAC,EAAE;AACjL;AAAA,IACF;AACA,UAAM,qBAAqB,MAAM,MAAM,sBAAsB;AAI7D,QAAI,CAAC,MAAM,KAAK,SAAS;AACvB,YAAM,KAAK,qBAAqB,kBAAkB;AAAA,IACpD;AACA,SAAK,KAAK;AACV,SAAK,QAAQ,kBAAkB;AAC/B,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,MAAM,qBAAqB,SAAS;AAClC,YAAQ,SAAS;AACjB,UAAM,qBAAqB,MAAM,KAAK,WAAW,YAAY,KAAK,WAAW,QAAQ,0BAA0B,KAAK,YAAY,KAAK,MAAM,GAAG,QAAQ,SAAS;AAC/J,QAAI,mBAAmB,CAAC,GAAG;AACzB,UAAI,UAAU,mBAAmB,CAAC,EAAE,KAAK;AACzC,UAAI,QAAQ,WAAW,YAAY,GAAG;AAEpC,kBAAU,cAAM,gBAAgB,OAAO,CAAC,QAAQ,GAAG,OAAO,QAAQ,UAAU,EAAE,CAAC,EAAE,SAAS;AAAA,MAC5F;AACA,WAAK,OAAO,IAAI,MAAM,8BAA8B,OAAO,EAAE,CAAC;AAAA,IAChE;AAAA,EACF;AACF;AAEA,IAAM,sBAAN,cAAkC,OAAO;AAAA;AAAA,EAEvC,YAAY,QAAQ,gBAAgB,iBAAiB,eAAe,iBAAiB;AACnF,UAAM;AACN,kBAAM,eAAe,MAAM,YAAY,eAAe;AACtD,SAAK,SAAS;AACd,SAAK,iBAAiB;AACtB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA,EAEA,MAAM,gBAAgB,aAAa;AA1PrC;AA2PI,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAClF,UAAM,KAAK,MAAM,eAAO,MAAM,kBAAkB,WAAW;AAC3D,UAAM,KAAK,yBAAyB,EAAE;AACtC,UAAM,gBAAgB,MAAM,KAAK,gBAAgB,mBAAmB;AAAA,MAClE,QAAQ,GAAG,MAAM;AAAA,MACjB,QAAM,QAAG,SAAH,mBAAS,eAAc;AAAA,MAC7B,OAAO,GAAG;AAAA,MACV,UAAU,GAAG;AAAA,IACf,GAAG,OAAO;AACV,UAAM,sBAAsB,MAAM,KAAK,gBAAgB,mCAAmC,aAAa;AACvG,QAAI;AACF,YAAM,KAAK,cAAc,oBAAoB,aAAa;AAAA,IAC5D,SAAS,OAAO;AACd,YAAM,KAAK,YAAY,KAAK;AAAA,IAC9B;AAEA,WAAO;AAAA,EACT;AAAA,EACA,YAAY,SAAS;AA7QvB;AA8QI,QAAI;AACF,UAAI,WAAW;AACf,UAAI,QAAQ,OAAO;AACjB,mBAAW,+DAA+D,QAAQ,KAAK;AAAA,MACzF,WAAW,QAAQ,QAAQ,OAAO,QAAQ,SAAS,UAAU;AAC3D,cAAM,YAAY,KAAK,MAAM,QAAQ,IAAI;AACzC,cAAM,cAAc,QAAQ,UAAU;AACtC,cAAM,aAAY,uCAAW,SAAQ;AACrC,YAAI,oBAAkB,4CAAW,UAAX,mBAAkB,cAAW,4CAAW,UAAX,mBAAkB,UAAQ,uCAAW,UAAS,QAAQ;AACzG,YAAI,mDAAiB,SAAS,aAAa;AACzC,cAAI,gBAAgB;AAEpB,gBAAM,UAAU,gBAAgB,MAAM,kBAAkB;AACxD,cAAI,SAAS;AACX,kBAAM,QAAQ,QAAQ,CAAC,EAAE,MAAM,GAAG;AAClC,4BAAgB,uBAAuB,MAAM,CAAC,CAAC;AAC/C,8BAAkB,MAAM,CAAC;AAAA,UAC3B;AACA,qBAAW,+DAA+D,eAAe,IAAI,aAAa;AAAA,QAC5G,OAAO;AACL,qBAAW,cAAc,eAAe;AAAA,UACxC,WAAW;AAAA,QACb,SAAS;AAAA,QACT;AAAA,MACF;AACA,YAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,YAAM,QAAQ,QAAQ;AACtB,aAAO;AAAA,IACT,SAAS,OAAO;AAAA,IAAC;AACjB,WAAO;AAAA,EACT;AAAA,EACA,MAAM,yBAAyB,oBAAoB;AACjD,QAAI,CAAC,mBAAmB,IAAI;AAC1B,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AACA,QAAI,CAAC,mBAAmB,QAAQ,CAAC,mBAAmB,OAAO;AAEzD,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA,EAGA,QAAQ,UAAU;AAChB,UAAM,IAAI,MAAM,qCAAqC;AAAA,EACvD;AAAA,EACA,MAAM,aAAa;AACjB,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU,MAAM,KAAK,gBAAgB,wBAAwB;AAAA,IACpE;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,YAAY,SAAS;AACzB,UAAM,gBAAgB,MAAM,KAAK,gBAAgB,oBAAoB;AACrE,QAAI,eAAe;AACjB,cAAQ,IAAI,6EAA6E;AACzF,YAAM,KAAK,MAAM,KAAK,gBAAgB;AAAA,QACpC,IAAI,MAAM,KAAK,WAAW;AAAA,QAC1B,MAAM;AAAA,MACR,CAAC;AACD,YAAM,GAAG,KAAK;AAAA,IAChB;AACA,WAAO,MAAM,KAAK,eAAe,YAAY,OAAO;AAAA,EACtD;AAAA,EACA,MAAM,gBAEN,aAAa;AACX,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACnC;AACF;AAEA,IAAM,wBAAN,cAAoC,YAAU,aAAa;AAAA,EACzD,YAAY,SAAS,QAAQ,gBAAgB,kBAAkB,eAAe,YAAY,iBAAiB;AACzG,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,iBAAiB;AACtB,SAAK,mBAAmB;AACxB,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,SAAS,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,eAAe,eAAe;AAAA,EACpG;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAAO;AAEX,SAAK,yBAAyB,MAAM,KAAK,iBAAiB,eAAe;AACzE,UAAM,KAAK,gBAAgB,KAAK;AAEhC,WAAO;AAAA,EACT;AAAA,EACA,YAAY;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,QAAQ,QAAQ,QAAQ;AAC5B,QAAI,WAAW,qBAAqB,WAAW,yBAAyB;AAGtE,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AACA,QAAI,WAAW,eAAe;AAE5B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,MAAM,KAAK,gBAAgB;AAAA,QAAgC;AAAA,UAC7D,QAAQ,OAAO,YAAY;AAAA,UAC3B,MAAM,OAAO,YAAY;AAAA,UACzB,OAAO,OAAO,YAAY;AAAA,UAC1B,UAAU,OAAO,YAAY;AAAA,QAC/B;AAAA,QAAG;AAAA;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AACA,WAAO,MAAM,KAAK,iBAAiB,QAAQ,QAAQ,MAAM;AAAA,EAC3D;AAAA,EACA,MAAM,eAAe,iBAAiB;AAEpC,WAAO,MAAM,MAAM,eAAe,eAAe;AAAA,EACnD;AAAA,EACA,MAAM,sBAAsB,iBAAiB;AAC3C,UAAM,aAAa,MAAM;AACzB,UAAM,SAAS,MAAM,KAAK,wBAAwB;AAClD,WAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C,UAAI,2BAA2B,SAAS,QAAQ,KAAK,YAAY,QAAQ,UAAU,EAAE,MAAM;AAAA,IAC7F,CAAC;AAAA,EACH;AAAA,EACA,MAAM,0BAA0B;AAC9B,WAAO,MAAM,KAAK,gBAAgB,kBAAkB;AAAA,EACtD;AAAA,EACA,MAAM,mBAAmB,iBAAiB,eAAe,SAAS;AAChE,UAAM,SAAS,MAAM,KAAK,wBAAwB;AAClD,WAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C,YAAM,WAAW,IAAI,2BAA2B,SAAS,QAAQ,KAAK,YAAY,QAAQ,iBAAiB,QAAW,OAAO;AAC7H,eAAS,MAAM;AAAA,IACjB,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAM,mCAAmC,SAAS;AAChD,UAAM,SAAS,MAAM,cAAM,kBAAkB,OAAO;AACpD,UAAM,aAAa,MAAM,KAAK,gBAAgB,cAAc,MAAM;AAClE,UAAM,gBAAgB,YAAY,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvE,UAAI,2BAA2B,SAAS,QAAQ,KAAK,YAAY,OAAO,QAAQ,YAAY,OAAO,KAAK,EAAE,MAAM;AAAA,IAClH,CAAC;AACD,WAAO;AAAA,MACL,MAAM;AAAA,MACN,eAAe;AAAA,MACf,MAAM,OAAO;AAAA,MACb,OAAO,UAAU,KAAK,OAAO,KAAK,EAAE,SAAS;AAAA,MAC7C,UAAU,UAAU,KAAK,OAAO,YAAY;AAAA;AAAA,MAE5C,OAAO,UAAU,KAAK,CAAC;AAAA,MACvB,MAAM,cAAM,SAAS,OAAO,QAAQ;AAAA;AAAA,MAEpC,SAAS,KAAK;AAAA,MACd,MAAM,OAAM,kBAAiB;AAC3B,cAAM,qBAAqB,MAAM,cAAc;AAC/C,YAAI,OAAO,SAAS,WAAW,GAAG;AAEhC,gBAAM,KAAK,gBAAgB,oBAAoB;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,gBAAgB;AACpB,WAAO,KAAK,iBAAiB,cAAc;AAAA,EAC7C;AACF;AAEA,IAAI,MAAM;AAAA,EACT,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,IACR,sCAAsC;AAAA,EACvC;AAAA,EACA,SAAS;AAAA,IACR,KAAK;AAAA,MACJ,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACR,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACX,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,sBAAsB;AAAA,MACrB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,sBAAsB;AAAA,MACrB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,uBAAuB;AAAA,MACtB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,uBAAuB;AAAA,MACtB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,uBAAuB;AAAA,MACtB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,wBAAwB;AAAA,MACvB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,wBAAwB;AAAA,MACvB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,wBAAwB;AAAA,MACvB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,wBAAwB;AAAA,MACvB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,yBAAyB;AAAA,MACxB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,yBAAyB;AAAA,MACxB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,yBAAyB;AAAA,MACxB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,yBAAyB;AAAA,MACxB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,2BAA2B;AAAA,MAC1B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,4BAA4B;AAAA,MAC3B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,6BAA6B;AAAA,MAC5B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,8BAA8B;AAAA,MAC7B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,8BAA8B;AAAA,MAC7B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,8BAA8B;AAAA,MAC7B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,yBAAyB;AAAA,MACxB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,0BAA0B;AAAA,MACzB,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,gCAAgC;AAAA,MAC/B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,gCAAgC;AAAA,MAC/B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,gCAAgC;AAAA,MAC/B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,2BAA2B;AAAA,MAC1B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,2BAA2B;AAAA,MAC1B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,2BAA2B;AAAA,MAC1B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,iCAAiC;AAAA,MAChC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,iCAAiC;AAAA,MAChC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,4BAA4B;AAAA,MAC3B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,4BAA4B;AAAA,MAC3B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,6BAA6B;AAAA,MAC5B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,6BAA6B;AAAA,MAC5B,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,mCAAmC;AAAA,MAClC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,mCAAmC;AAAA,MAClC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,qCAAqC;AAAA,MACpC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,iCAAiC;AAAA,MAChC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,iCAAiC;AAAA,MAChC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,mCAAmC;AAAA,MAClC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,oCAAoC;AAAA,MACnC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,oCAAoC;AAAA,MACnC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,sCAAsC;AAAA,MACrC,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,oDAAoD;AAAA,MACnD,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,IACZ;AAAA,IACA,kBAAkB;AAAA,EACnB;AAAA,EACA,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,MAAM;AAAA,IACL,KAAK;AAAA,EACN;AAAA,EACA,QAAQ;AAAA,EACR,OAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EACA,cAAc;AAAA,IACb,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR,eAAe;AAAA,QACd;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,aAAa;AAAA,EACb,cAAc;AAAA,IACb,kCAAkC;AAAA,IAClC,4BAA4B;AAAA,IAC5B,8BAA8B;AAAA,IAC9B,eAAe;AAAA,IACf,wBAAwB;AAAA,IACxB,sBAAsB;AAAA,IACtB,oBAAoB;AAAA,IACpB,uBAAuB;AAAA,IACvB,yCAAyC;AAAA,IACzC,kCAAkC;AAAA,IAClC,8BAA8B;AAAA,IAC9B,qCAAqC;AAAA,IACrC,gCAAgC;AAAA,IAChC,wBAAwB;AAAA,IACxB,8BAA8B;AAAA,IAC9B,qBAAqB;AAAA,IACrB,uBAAuB;AAAA,IACvB,oCAAoC;AAAA,IACpC,gCAAgC;AAAA,IAChC,wBAAwB;AAAA,IACxB,wBAAwB;AAAA,IACxB,wBAAwB;AAAA,IACxB,6BAA6B;AAAA,IAC7B,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,aAAa;AAAA,IACb,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA,kBAAkB;AAAA,IACjB,mCAAmC;AAAA,IACnC,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,yBAAyB;AAAA,IACzB,yBAAyB;AAAA,IACzB,WAAW;AAAA,EACZ;AAAA,EACA,sBAAsB;AAAA,IACrB,WAAW;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,mCAAmC;AAAA,MAClC,UAAU;AAAA,IACX;AAAA,IACA,yBAAyB;AAAA,MACxB,UAAU;AAAA,IACX;AAAA,IACA,kBAAkB;AAAA,MACjB,UAAU;AAAA,IACX;AAAA,IACA,mBAAmB;AAAA,MAClB,UAAU;AAAA,IACX;AAAA,IACA,MAAM;AAAA,MACL,UAAU;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACP,UAAU;AAAA,IACX;AAAA,EACD;AAAA,EACA,iBAAiB;AAAA,IAChB,mCAAmC;AAAA,IACnC,2CAA2C;AAAA,IAC3C,4CAA4C;AAAA,IAC5C,2CAA2C;AAAA,IAC3C,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,mBAAmB;AAAA,IACnB,0BAA0B;AAAA,IAC1B,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,uDAAuD;AAAA,IACvD,MAAM;AAAA,IACN,aAAa;AAAA,IACb,0BAA0B;AAAA,IAC1B,qCAAqC;AAAA,IACrC,qBAAqB;AAAA,IACrB,QAAQ;AAAA,IACR,yBAAyB;AAAA,IACzB,yBAAyB;AAAA,IACzB,WAAW;AAAA,IACX,YAAY;AAAA,EACb;AAAA,EACA,SAAS;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,MAAM;AAAA,EACP;AACD;AAEA,IAAM,gBAAN,MAAoB;AAAA,EAClB,YAAY,YAAY,mBAAmB,SAAS,UAAU,WAAW;AACvE,SAAK,aAAa;AAClB,SAAK,oBAAoB;AACzB,SAAK,UAAU;AACf,UAAM,UAAU,CAAC;AACjB,QAAI,QAAQ,KAAK,UAAU,GAAG;AAC5B,YAAM,WAAW,OAAO,eAAe,eAAe,mBAAmB,aAAa,WAAW,gBAAgB;AACjH,UAAI,WAAW;AACb,gBAAQ,cAAc,IAAI;AAAA,MAC5B,WAAW,UAAU;AACnB,gBAAQ,aAAa,IAAI;AACzB,YAAI,UAAU;AACZ,kBAAQ,aAAa,IAAI;AAAA,QAC3B;AAAA,MACF;AAGA,UAAI,OAAO,eAAe,eAAe,mBAAmB,cAAc,OAAO,WAAW,kBAAkB,UAAU;AACtH,gBAAQ,eAAe,IAAI,UAAU,WAAW,aAAa;AAAA,MAC/D;AAGA,UAAI,OAAO,eAAe,eAAe,uBAAuB,cAAc,OAAO,WAAW,sBAAsB,UAAU;AAC9H,gBAAQ,eAAe,IAAI,UAAU,WAAW,iBAAiB;AACjE,gBAAQ,oBAAoB,IAAI;AAAA,MAClC;AACA,cAAQ,eAAe,IAAI,IAAI;AAC/B,cAAQ,YAAY,IAAI,IAAI;AAC5B,cAAQ,gBAAgB,IAAI,WAAW,iBAAiB,OAAO,WAAW,SAAY,UAAU;AAAA,IAClG;AACA,SAAK,wBAAwB,IAAI,YAAU,gBAAgB;AAAA,MACzD,KAAK,KAAK;AAAA,MACV;AAAA,IACF,GAAG;AAAA,MACD,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,SAAK,eAAe,KAAK,gBAAgB;AAAA,EAC3C;AAAA,EACA,MAAM,kBAAkB;AAEtB,UAAM,QAAQ,MAAM,KAAK,sBAAsB,KAAK,eAAe,CAAC,CAAC;AACrE,UAAM,eAAe,SAAS,KAAK;AACnC,QAAI,iBAAiB,KAAK,SAAS;AACjC,YAAM,IAAI,MAAM,WAAW,KAAK,UAAU,kBAAkB,YAAY,gCAAgC,KAAK,OAAO,EAAE;AAAA,IACxH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,oBAAoB,SAAS;AACjC,UAAM,KAAK;AACX,UAAM,qBAAiB,0BAAY,MAAM,cAAM,kBAAkB,OAAO,CAAC;AACzE,UAAM,kBAAkB,CAAC,gBAAgB,KAAK,iBAAiB;AAC/D,UAAM,KAAK,mBAAmB,yBAAyB,eAAe;AACtE,WAAO,MAAM,KAAK,sBAAsB,KAAK,yBAAyB,CAAC,gBAAgB,KAAK,iBAAiB,CAAC;AAAA,EAChH;AAAA,EACA,MAAM,kBAAkB,SAAS;AAC/B,UAAM,KAAK;AACX,UAAM,qBAAiB,0BAAY,MAAM,cAAM,kBAAkB,OAAO,CAAC;AACzE,UAAM,kBAAkB,CAAC,gBAAgB,KAAK,iBAAiB;AAC/D,UAAM,KAAK,mBAAmB,gCAAgC,eAAe;AAC7E,WAAO,MAAM,KAAK,sBAAsB,KAAK,gCAAgC,CAAC,gBAAgB,KAAK,iBAAiB,CAAC;AAAA,EACvH;AAAA,EACA,MAAM,mBAAmB,QAAQ,MAAM;AACrC;AACE;AAAA,IACF;AAAA,EACF;AACF;AAQA,eAAe,mBAAmB,QAAQ,YAAY,kBAAkB;AACtE,QAAM,aAAa,qCAAoB,QAAQ,OAAO,mBAAmB,gBAAgB;AACzF,QAAM,WAAW,MAAM,iBAAiB,WAAW,GAAG;AACtD,QAAM,gBAAgB,IAAI,cAAc,OAAO,YAAY,OAAO,mBAAmB,SAAS,OAAO,UAAU,OAAO,SAAS;AAC/H,SAAO,MAAM,IAAI,sBAAsB,SAAS,QAAQ,OAAO,aAAa,kBAAkB,eAAe,YAAY,UAAU,EAAE,KAAK;AAC5I;AAEA,IAAM,qBAAqB;AAE3B,IAAM,mBAAmB,CAAC;AAAA,EACxB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,WAAW;AACb,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,WAAW;AACb,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,WAAW;AACb,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,SAAS;AAAA,IACT,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,WAAW;AACb,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,CAAC;AAAA,IACD,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,GAAG;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,EAChB,CAAC;AAAA,EACD,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,GAAG;AAAA,EACD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,EACV,iBAAiB;AACnB,CAAC;AAeD,IAAM,iBAAN,MAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnB,YAAY,QAAQ;AAClB,oBAAgB,MAAM,aAAa,IAAI;AACvC,SAAK,WAAW,OAAO;AACvB,SAAK,YAAY,OAAO;AACxB,SAAK,oBAAoB,OAAO;AAChC,SAAK,iBAAiB,OAAO;AAC7B,SAAK,eAAe,OAAO;AAG3B,SAAK,iBAAiB,qCAAoB,QAAQ,OAAO,mBAAmB,OAAO,QAAQ,EAAE,QAAQ,eAAO,UAAU,WAAW;AAAA,EACnI;AAAA,EACA,MAAM,OAAO;AACX,QAAK,MAAM,KAAK,SAAS,QAAQ,KAAK,iBAAiB,MAAO,MAAM;AAClE,YAAM,IAAI,MAAM,8BAA8B,KAAK,iBAAiB,EAAE;AAAA,IACxE;AACA,UAAM,KAAK,kBAAkB;AAC7B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BA,MAAM,sBAAsB;AAC1B,QAAI,CAAC,KAAK,WAAW;AAEnB,aAAO,KAAK;AAAA,IACd;AACA,UAAM,oBAAoB,MAAM,KAAK,SAAS,QAAQ,KAAK,kBAAkB,CAAC;AAC9E,QAAI,kBAAkB,SAAS,GAAG;AAChC,WAAK,YAAY;AAAA,IACnB;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,2BAA2B;AAC/B,UAAM,WAAW,KAAK,mBAAmB;AAGzC,QAAI;AACF,YAAM,KAAK,eAAe,WAAW,iBAAiB,QAAQ;AAAA,IAChE,SAAS,GAAG;AACV,aAAO,EAAE,UAAU;AAAA,IACrB;AACA,UAAM,IAAI,MAAM,oBAAoB;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,cAAc;AAClB,QAAI,MAAM,KAAK,oBAAoB,GAAG;AACpC,aAAO,MAAM,KAAK,mBAAmB;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,0BAA0B;AAC9B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,sBAAsB,QAAQ;AAClC,UAAM,IAAI,MAAM,cAAM,kBAAkB,MAAM;AAC9C,eAAO,mCAAuB,GAAG,KAAK,SAAS;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,QAAQ;AACjB,eAAO,yBAAW,QAAQ,KAAK;AAAA,EACjC;AAAA,EACA,MAAM,gCAAgC,kBAAkB,SAAS;AAC/D,aAAS,YAAY,GAAG;AACtB,UAAI,CAAC,KAAK,MAAM,IAAI;AAClB,eAAO;AAAA,MACT;AACA,aAAO,UAAU,KAAK,EAAE,SAAS,CAAC;AAAA,IACpC;AACA,UAAM,QAAQ,YAAY,iBAAiB,KAAK,KAAK,UAAU,KAAK,CAAC;AACrE,UAAM,WAAW,UAAU,iBAAiB,OAAO,MAAM,KAAK,cAAc,iBAAiB,QAAQ,OAAO,iBAAiB,IAAI;AACjI,QAAI;AACJ,UAAM,YAAY,MAAM,KAAK,oBAAoB;AACjD,QAAI,WAAW;AAEb,qBAAe,MAAM,KAAK,SAAS,YAAY;AAAA,QAC7C,MAAM,KAAK,kBAAkB;AAAA,QAC7B,IAAI,iBAAiB;AAAA,QACrB,MAAM,iBAAiB;AAAA,MACzB,CAAC;AAED,qBAAe,aAAa,IAAI,GAAG,EAAE,IAAI,GAAG;AAE5C,UAAI,aAAa,GAAG,GAAK,GAAG;AAC1B,uBAAe,UAAU,KAAK,GAAM;AAAA,MACtC;AAAA,IACF,OAAO;AACL,qBAAe,YAAY,iBAAiB,QAAQ,KAAM,MAAM,KAAK,SAAS,YAAY;AAAA,QACxF,MAAM,KAAK;AAAA,QACX,IAAI,KAAK,kBAAkB;AAAA,QAC3B,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AACA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,cAAc,QAAQ;AAC1B,UAAM,UAAU,MAAM,KAAK,SAAS,WAAW,EAAE,KAAK,SAAO,IAAI,OAAO;AACxE,WAAO,iBAAiB,QAAQ,KAAK,mBAAmB,OAAO;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,oBAAoB;AACxB,QAAI,CAAC,KAAK,eAAe;AACvB,UAAI,KAAK,gBAAgB;AACvB,aAAK,gBAAgB,KAAK;AAAA,MAC5B,OAAO;AACL,aAAK,gBAAgB,MAAM,KAAK,yBAAyB;AAAA,MAC3D;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,oBAAoB,UAAU;AAClC,QAAI,CAAC,YAAY,aAAa,MAAM;AAClC,aAAO;AAAA,IACT;AACA,UAAM,kBAAkB,SAAS,UAAU,GAAG,EAAE;AAChD,UAAM,mBAAmB,OAAO,SAAS,UAAU,EAAE;AACrD,WAAO,MAAM,KAAK,SAAS,YAAY;AAAA,MACrC,IAAI;AAAA,MACJ,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,qBAAqB,MAAM,SAAS;AACxC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,MAAM,KAAK,gCAAgC,MAAM,OAAO;AAC5D,UAAM,WAAW,MAAM,KAAK,YAAY;AACxC,UAAM,UAAU,MAAM,KAAK,oBAAoB,QAAQ;AACvD,UAAM,uBAAuB,UAAU,KAAK,MAAM,KAAK,wBAAwB,CAAC,EAAE,IAAI,OAAO;AAC7F,QAAI;AAAA,MACF;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,gBAAgB,CAAC,sBAAsB;AAC1C,YAAM,UAAU,MAAM,kBAAkB,KAAK,QAAQ;AACrD,UAAI,CAAC,sBAAsB;AACzB,+BAAuB,QAAQ,wBAAwB;AAAA,MACzD;AACA,UAAI,CAAC,cAAc;AACjB,uBAAe,QAAQ,gBAAgB;AACvC,cAAM,UAAU,MAAM,KAAK,SAAS,WAAW;AAC/C,cAAM,UAAU,QAAQ;AACxB,YAAI,YAAY,OAAK,WAAW,YAAY,OAAqB,WAAW,YAAY,OAAmB,SAAS;AAClH,iCAAuB;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AACA,UAAM,gBAAgB;AAAA,MACpB,QAAQ,KAAK,kBAAkB;AAAA,MAC/B,OAAO,KAAK,SAAS,KAAK,SAAS;AAAA,MACnC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,IACpB;AACA,QAAI;AACJ,QAAI,SAAS;AACb,QAAI,KAAK,cAAc;AAErB,UAAI;AAEF,cAAM,eAAO,MAAM,kBAAkB,MAAM;AAAA,MAE7C,SAAS,GAAG;AAAA,MAAC;AACb,YAAM,OAAO;AAAA,QACX,QAAQ,OAAO;AAAA,QACf,OAAO,OAAO;AAAA,QACd,UAAU,OAAO;AAAA,QACjB,UAAU,OAAO;AAAA,QACjB,cAAc,OAAO;AAAA,QACrB,sBAAsB,OAAO;AAAA,QAC7B,cAAc,OAAO;AAAA,QACrB,sBAAsB,OAAO;AAAA;AAAA,QAE7B,kBAAkB;AAAA,QAClB,WAAW,eAAO,MAAM,QAAQ,qBAAO,MAAM,UAAU,CAAC,CAAC;AAAA,MAC3D;AACA,eAAS,MAAM,eAAO,MAAM,kBAAkB,IAAI;AAClD,YAAM,yBAAqB,mCAAuB,MAAM;AACxD,aAAO,qBAAqB;AAC5B,yBAAmB,MAAM,KAAK,aAAa,oBAAoB,MAAM;AACrE,UAAI,qBAAqB,MAAM;AAC7B,2BAAmB;AAAA,MACrB;AAAA,IACF;AACA,QAAI,kBAAkB;AACpB,aAAO,mBAAmB;AAC1B,aAAO;AAAA,QACL,GAAG;AAAA,QACH,WAAW;AAAA,MACb;AAAA,IACF,OAAO;AACL,YAAM,aAAa;AAAA,QACjB,GAAG;AAAA,QACH,kBAAkB;AAAA,MACpB;AACA,iBAAW,qBAAqB,MAAM,KAAK,sBAAsB,UAAU;AAC3E,aAAO;AAAA,QACL,GAAG;AAAA,QACH,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,WAAW,QAAQ;AACvB,UAAM,aAAa,MAAM,KAAK,cAAc,MAAM;AAClD,UAAM,YAAY,KAAK,eAAe,UAAU;AAChD,WAAO;AAAA,MACL,GAAG;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,mBAAmB,MAAM,SAAS;AACtC,WAAO,MAAM,KAAK,WAAW,MAAM,KAAK,qBAAqB,MAAM,OAAO,CAAC;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,iBAAiB,YAAY;AACjC,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAClF,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACnF,UAAM,UAAU,KAAK,IAAI,IAAI;AAC7B,WAAO,KAAK,IAAI,IAAI,SAAS;AAC3B,YAAM,SAAS,MAAM,KAAK,eAAe,YAAY,KAAK,eAAe,QAAQ,mBAAmB,UAAU,CAAC;AAC/G,UAAI,OAAO,CAAC,GAAG;AACb,eAAO,OAAO,CAAC,EAAE;AAAA,MACnB;AACA,YAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,QAAQ,CAAC;AAAA,IAC5D;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAM,aAAN,cAAyB,eAAe;AAAA,EACtC,YAAY,QAAQ,kBAAkB;AACpC,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,SAAS;AAId,SAAK,MAAM,YAAY,eAAe,iBAAiB,OAAO,OAAO;AAAA,MACnE,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EACA,MAAM,aAAa;AACjB,WAAO,MAAM,KAAK,SAAS,WAAW,EAAE,KAAK,OAAK,EAAE,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,qBAAqB;AAxmE7B;AAymEI,QAAI,CAAC,KAAK,iBAAiB;AACzB,WAAI,UAAK,OAAO,gBAAZ,mBAAyB,KAAK;AAChC,aAAK,kBAAkB,MAAM,KAAK,IAAI,YAAY,MAAM,KAAK,kBAAkB,GAAG,KAAK,OAAO,YAAY,GAAG;AAAA,MAC/G,OAAO;AACL,aAAK,kBAAkB,MAAM,KAAK,IAAI,YAAY,MAAM,KAAK,kBAAkB,GAAG,gBAAgB;AAAA,MACpG;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,qBAAqB;AACzB,UAAM,UAAU,MAAM,KAAK,mBAAmB;AAC9C,YAAQ,IAAI,oCAAoC;AAChD,UAAM,cAAc,MAAM,KAAK,OAAO,YAAY,WAAW;AAC7D,UAAM,KAAK,MAAM,KAAK,OAAO,YAAY,cAAc,SAAS,WAAW;AAC3E,QAAI;AACF,cAAQ,IAAI,kCAAkC,MAAM,GAAG,gBAAgB,GAAG,OAAO,KAAK;AAAA,IACxF,SAAS,GAAG;AACV,cAAQ,MAAM,wCAAwC,CAAC;AAAA,IACzD;AACA,WAAO,cAAM,UAAU,CAAC,QAAQ,WAAW,GAAG,GAAG,OAAO,CAAC,CAAC;AAAA,EAC5D;AAAA,EACA,MAAM,qBAAqB;AA9nE7B;AA+nEI,QAAI,KAAK,iBAAiB;AACxB,aAAO,KAAK;AAAA,IACd;AACA,SAAI,UAAK,OAAO,gBAAZ,mBAAyB,KAAK;AAChC,WAAK,kBAAkB,MAAM,KAAK,IAAI,YAAY,KAAK,OAAO,gBAAgB,KAAK,OAAO,YAAY,GAAG;AAAA,IAC3G,OAAO;AACL,WAAK,kBAAkB,MAAM,KAAK,IAAI,YAAY,KAAK,OAAO,cAAc;AAAA,IAC9E;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,2BAA2B;AAC/B,QAAI,KAAK,OAAO,gBAAgB;AAC9B,aAAO,KAAK,OAAO;AAAA,IACrB;AACA,UAAM,UAAU,MAAM,KAAK,mBAAmB;AAC9C,UAAM,cAAc,MAAM,KAAK,OAAO,YAAY,WAAW;AAC7D,WAAO,KAAK,OAAO,YAAY,kBAAkB,SAAS,WAAW;AAAA,EACvE;AAAA,EACA,MAAM,WAAW;AACf,QAAI,MAAM,KAAK,oBAAoB,GAAG;AACpC,aAAO,UAAU,KAAK,CAAC;AAAA,IACzB;AACA,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,WAAO,KAAK,OAAO,YAAY,SAAS,eAAe;AAAA,EACzD;AAAA,EACA,MAAM,cAAc,QAAQ,OAAO,MAAM;AACvC,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,UAAM,KAAK,MAAM,KAAK,OAAO,YAAY,QAAQ,iBAAiB,QAAQ,OAAO,IAAI;AACrF,WAAO,GAAG,OAAO;AAAA,EACnB;AAAA,EACA,MAAM,mBAAmB,SAAS,QAAQ,OAAO;AAC/C,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,UAAM,KAAK,MAAM,gBAAgB,QAAQ,gBAAgB,CAAC,SAAS,QAAQ,KAAK,CAAC;AACjF,WAAO,GAAG,OAAO;AAAA,EACnB;AAAA,EACA,MAAM,eAAe,YAAY;AAC/B,WAAO,MAAM,KAAK,OAAO,YAAY,YAAY,cAAM,SAAS,UAAU,CAAC;AAAA,EAC7E;AAAA,EACA,MAAM,mBAAmB;AACvB,WAAO,CAAE,MAAM,KAAK,oBAAoB;AAAA,EAC1C;AACF;AAEA,IAAM,uBAAN,cAAmC,UAAU;AAAA,EAC3C,YAAY,QAAQ;AAClB,UAAM;AACN,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,MAAM,WAAW,QAAQ;AACvB,UAAM,SAAS,KAAK;AACpB,UAAM,mBAAmB,iBAAiB,OAAO,OAAO;AAAA,MACtD,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,IACpB,CAAC;AACD,UAAM,YAAY,MAAM,KAAK,aAAa,OAAO,OAAO,gBAAgB;AACxE,UAAM,aAAa,KAAK,OAAO,cAAc,WAAW,SAAS;AACjE,UAAM,eAAe,KAAK,OAAO,gBAAgB,WAAW,SAAS;AACrE,UAAM,oBAAoB,OAAO,qBAAqB;AACtD,UAAM,cAAc,MAAM,OAAO,eAAe,UAAU;AAC1D,UAAM,iBAAiB;AAAA,MACrB,OAAO,OAAO;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,KAAK,OAAO,UAAU,KAAK,OAAO,eAAe,KAAK,OAAO,eAAe,sBAAsB,cAAc,mBAAmB,KAAK,OAAO,UAAU,KAAK,OAAO,SAAS,IAAI;AAAA,MAChM,gBAAgB,OAAO;AAAA,MACvB,gBAAgB,OAAO;AAAA,MACvB,aAAa,OAAO,eAAe,KAAK,mBAAmB;AAAA,MAC3D,aAAa,OAAO,eAAe,KAAK,mBAAmB;AAAA,MAC3D,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,IACpB;AACA,SAAK,iBAAiB,OAAO;AAC7B,UAAM,aAAa,IAAI,WAAW,gBAAgB,gBAAgB;AAClE,SAAK,aAAa,MAAM,mBAAmB,gBAAgB,YAAY,gBAAgB;AACvF,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,MAAM,QAAQ,gBAAgB;AAC5B,UAAM,KAAK,WAAW,cAAc;AACpC,WAAO,MAAM,KAAK,WAAW;AAAA,EAC/B;AAAA,EACA,cAAc;AACZ,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO,QAAQ,QAAQ,KAAK,UAAU;AAAA,EACxC;AAAA,EACA,MAAM,YAAY;AAChB,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO,QAAQ,QAAQ,KAAK,WAAW,UAAU,CAAC;AAAA,EACpD;AAAA,EACA,MAAM,aAAa;AACjB,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,WAAO,OAAO,WAAW;AAAA,EAC3B;AAAA,EACA,MAAM,cAAc;AAClB,QAAI;AACF,YAAM,UAAU,MAAM,KAAK,WAAW;AACtC,aAAO,CAAC,CAAC;AAAA,IACX,SAAS,GAAG;AACV,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,MAAM,aAAa;AACjB,SAAK,iBAAiB;AACtB,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA,EAGA,MAAM,YAAY,SAAS;AAEzB,UAAM,WAAW,MAAM,KAAK,YAAY;AACxC,UAAM,kBAAkB,MAAM,SAAS,WAAW,GAAG;AACrD,QAAI,mBAAmB,SAAS;AAE9B,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AAAA,EACF;AAAA,EACA,iBAAiB;AACf,WAAO,QAAQ,QAAQ;AAAA,EACzB;AAAA;AAAA,EAGA,aAAa,QAAQ;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtB,MAAM,uBAAuB,aAAa;AAnwE5C;AAowEI,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,gBAAgB,MAAM,OAAO,WAAW;AAC9C,UAAM,gBAAgB,YAAM,gBAAgB,QAAQ,cAAc,GAAG,OAAO,UAAQ,eAAO,MAAM,WAAW,KAAK,MAAM,MAAM,eAAO,MAAM,WAAW,aAAa,CAAC,EAAE,CAAC,MAAhJ,mBAAmJ;AACzK,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AACA,WAAO,aAAa,oBAAoB,SAAS,YAAY,UAAU,CAAC;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,QAAQ,aAAa;AACzB,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,KAAK,MAAM,OAAO,gBAAgB;AAAA,MACtC,IAAI,YAAY,UAAU;AAAA,MAC1B,MAAM,YAAY,OAAO;AAAA,MACzB,OAAO,MAAM,YAAY,SAAS;AAAA,IACpC,CAAC;AACD,UAAM,UAAU,MAAM,GAAG,KAAK;AAC9B,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,aAAa,cAAc;AAC/B,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,UAAU,aAAa,IAAI,CAAAC,QAAMA,IAAG,UAAU,CAAC;AACrD,UAAM,OAAO,aAAa,IAAI,CAAAA,QAAMA,IAAG,OAAO,CAAC;AAC/C,UAAM,SAAS,aAAa,IAAI,MAAM,UAAU,KAAK,CAAC,CAAC;AACvD,UAAM,WAAW,MAAM,KAAK,WAAW,mBAAmB,SAAS,QAAQ,IAAI;AAC/E,UAAM,KAAK,MAAM,OAAO;AAAA,MAAgB;AAAA,QACtC,IAAI,MAAM,OAAO,WAAW;AAAA,QAC5B,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MAAG;AAAA;AAAA,IACH;AAEA,UAAM,UAAU,MAAM,GAAG,KAAK;AAC9B,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,SAAS;AACb,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,QAAI,MAAM,KAAK,WAAW,iBAAiB,GAAG;AAC5C,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,KAAK,MAAM,OAAO;AAAA,MAAgB;AAAA,QACtC,IAAI,MAAM,OAAO,WAAW;AAAA,QAC5B,MAAM;AAAA,MACR;AAAA,MAAG;AAAA;AAAA,IACH;AAEA,UAAM,UAAU,MAAM,GAAG,KAAK;AAC9B,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,aAAa;AACjB,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO,MAAM,KAAK,WAAW,iBAAiB;AAAA,EAChD;AAAA,EACA,MAAM,iBAAiB;AACrB,UAAM,aAAa,MAAM,KAAK,WAAW;AACzC,QAAI,CAAC,YAAY;AACf,YAAM,KAAK,OAAO;AAAA,IACpB;AAAA,EACF;AAAA,EACA,MAAM,iBAAiB,QAAQ,aAAa;AAC1C,UAAM,KAAK,eAAe;AAC1B,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,WAAO,gBAAgB,QAAQ,iBAAiB,QAAQ,WAAW;AAAA,EACrE;AAAA,EACA,MAAM,kBAAkB,QAAQ;AAC9B,UAAM,KAAK,eAAe;AAC1B,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,WAAO,gBAAgB,QAAQ,aAAa,MAAM;AAAA,EACpD;AAAA,EACA,MAAM,SAAS,QAAQ;AACrB,UAAM,KAAK,eAAe;AAC1B,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,WAAO,gBAAgB,QAAQ,sBAAsB,MAAM;AAAA,EAC7D;AAAA,EACA,MAAM,YAAY,QAAQ;AACxB,UAAM,KAAK,eAAe;AAC1B,UAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,WAAO,gBAAgB,QAAQ,uBAAuB,MAAM;AAAA,EAC9D;AAAA,EACA,MAAM,sBAAsB;AAx3E9B;AAy3EI,UAAM,aAAa,MAAM,KAAK,WAAW;AACzC,QAAI,YAAY;AACd,YAAM,kBAAkB,MAAM,KAAK,mBAAmB;AACtD,aAAO,gBAAgB,QAAQ,uBAAuB;AAAA,IACxD,OAAO;AACL,YAAM,iBAAiB,QAAM,UAAK,mBAAL,mBAAqB;AAClD,UAAI,CAAC,gBAAgB;AACnB,cAAM,IAAI,MAAM,+BAA+B;AAAA,MACjD;AACA,aAAO,CAAC;AAAA,QACN,SAAS;AAAA,QACT,QAAQ,MAAM,eAAe,WAAW;AAAA,QACxC,aAAa;AAAA,UACX,WAAW,oBAAI,KAAK,CAAC;AAAA,UACrB,gBAAgB,oBAAI,KAAK,CAAC;AAAA,UAC1B,gCAAgC,UAAU,KAAK,CAAC;AAAA,UAChD,qBAAqB,CAAC;AAAA,QACxB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,qBAAqB;AAn5E7B;AAo5EI,UAAM,aAAa,MAAM,KAAK,WAAW;AACzC,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,8IAA8I;AAAA,IAChK;AAGA,UAAM,MAAM,YAAY,WAAW,MAAM,KAAK,UAAU,GAAG,KAAK,OAAO,OAAO;AAAA,MAC5E,UAAU,KAAK,OAAO;AAAA,MACtB,WAAW,KAAK,OAAO;AAAA,IACzB,CAAC;AACD,SAAI,UAAK,OAAO,gBAAZ,mBAAyB,KAAK;AAChC,aAAO,IAAI,YAAY,MAAM,KAAK,WAAW,GAAG,KAAK,OAAO,YAAY,GAAG;AAAA,IAC7E,OAAO;AACL,aAAO,IAAI,YAAY,MAAM,KAAK,WAAW,CAAC;AAAA,IAChD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,qBAAqB;AAz6E7B;AA06EI,UAAM,MAAM,YAAY,WAAW,MAAM,KAAK,UAAU,GAAG,KAAK,OAAO,OAAO;AAAA,MAC5E,UAAU,KAAK,OAAO;AAAA,MACtB,WAAW,KAAK,OAAO;AAAA,IACzB,CAAC;AACD,SAAI,UAAK,OAAO,gBAAZ,mBAAyB,KAAK;AAChC,aAAO,IAAI,YAAY,KAAK,OAAO,gBAAgB,KAAK,OAAO,YAAY,GAAG;AAAA,IAChF;AACA,WAAO,IAAI,YAAY,KAAK,OAAO,cAAc;AAAA,EACnD;AAAA,EACA,qBAAqB;AACnB,WAAO;AAAA,MACL,eAAe,OAAO,SAAS,UAAU;AACvC,eAAO,QAAQ,QAAQ,iBAAiB,CAAC,OAAO,eAAO,MAAM,YAAY,EAAE,CAAC,CAAC;AAAA,MAC/E;AAAA,MACA,mBAAmB,OAAO,SAAS,UAAU;AAC3C,YAAI;AACF,iBAAO,MAAM,QAAQ,KAAK,cAAc,CAAC,OAAO,eAAO,MAAM,YAAY,EAAE,CAAC,CAAC;AAAA,QAC/E,SAAS,GAAG;AACV,kBAAQ,IAAI,6BAA6B;AAEzC,iBAAO,QAAQ,KAAK,cAAc,CAAC,KAAK,CAAC;AAAA,QAC3C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,WAAO;AAAA,MACL,SAAS,OAAO,SAAS,QAAQ,OAAO,SAAS;AAC/C,eAAO,QAAQ,QAAQ,WAAW,CAAC,QAAQ,OAAO,IAAI,CAAC;AAAA,MACzD;AAAA,MACA,UAAU,OAAM,YAAW;AACzB,eAAO,QAAQ,KAAK,YAAY,CAAC,CAAC;AAAA,MACpC;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,aAAa,YAAY,UAAU;AACvC,QAAI,OAAO,eAAe,UAAU;AAClC,aAAO,WAAW;AAAA,IACpB;AACA,QAAI,OAAO,eAAe,UAAU;AAClC,YAAM,QAAQ,kBAAkB,UAAU;AAC1C,aAAO,MAAM;AAAA,IACf;AACA,QAAI,OAAO,eAAe,UAAU;AAClC,UAAI,WAAW,WAAW,MAAM,KAAK,WAAW,WAAW,IAAI,GAAG;AAEhE,cAAM,WAAW,MAAM,SAAS,WAAW,GAAG;AAC9C,cAAM,QAAQ,kBAAkB,OAAO;AACvC,eAAO,MAAM;AAAA,MACf;AAEA,aAAO;AAAA,IACT,OAAO;AACL,YAAM,IAAI,MAAM,oBAAoB,UAAU,EAAE;AAAA,IAClD;AAAA,EACF;AACF;",
  "names": ["fetch", "tx"]
}
