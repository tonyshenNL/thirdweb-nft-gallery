import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-e25e1cec.esm.js';
import { w as walletIds } from '../../../../dist/walletIds-18a8e969.esm.js';
import { a as AbstractClientWallet, c as createAsyncLocalStorage } from '../../../../dist/base-04cc6f4f.esm.js';
import { defaultChains, Ethereum } from '@thirdweb-dev/chains';
import '../../../../dist/classPrivateMethodGet-71fe23d8.esm.js';
import '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.esm.js';
import '../../../../dist/defineProperty-e24c82ea.esm.js';
import 'ethers';
import 'eventemitter3';
import '@thirdweb-dev/sdk';

// eslint-disable-next-line @typescript-eslint/ban-types
var _storage = /*#__PURE__*/new WeakMap();
class SignerWallet extends AbstractClientWallet {
  constructor(options) {
    super("signerWallet", options);
    _classPrivateFieldInitSpec(this, _storage, {
      writable: true,
      value: void 0
    });
    this.options = options;
    this.signer = options.signer;
    _classPrivateFieldSet(this, _storage, options?.storage || createAsyncLocalStorage(walletIds.localWallet));
  }
  async getConnector() {
    if (!this.connector) {
      const {
        SignerConnector
      } = await import('../../../connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.esm.js');
      if (!this.signer) {
        this.signer = this.options.signer;
      }
      const defaults = this.options.chain ? [...defaultChains, this.options.chain] : defaultChains;
      this.connector = new SignerConnector({
        chain: this.options.chain || Ethereum,
        signer: this.signer,
        chains: this.options.chains || defaults,
        clientId: this.options.clientId,
        secretKey: this.options.secretKey
      });
    }
    return this.connector;
  }
}

export { SignerWallet };
