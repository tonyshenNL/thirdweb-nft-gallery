'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var wc = require('../../dist/wc-bf863bbf.cjs.dev.js');
var walletIds = require('../../dist/walletIds-2f745506.cjs.dev.js');
var evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase = require('../../dist/base-61a301bf.cjs.dev.js');
var connector = require('../../dist/connector-a63dd9e7.cjs.dev.js');
var evm_wallets_paperWallet_dist_thirdwebDevWalletsEvmWalletsPaperWallet = require('../wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.dev.js');
var evm_wallets_blocto_dist_thirdwebDevWalletsEvmWalletsBlocto = require('../wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.dev.js');
var evm_wallets_coinbaseWallet_dist_thirdwebDevWalletsEvmWalletsCoinbaseWallet = require('../wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.dev.js');
var evm_wallets_embeddedWallet_dist_thirdwebDevWalletsEvmWalletsEmbeddedWallet = require('../wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.dev.js');
var evm_wallets_ethers_dist_thirdwebDevWalletsEvmWalletsEthers = require('../wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.dev.js');
var evm_wallets_frame_dist_thirdwebDevWalletsEvmWalletsFrame = require('../wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.dev.js');
var evm_wallets_injected_dist_thirdwebDevWalletsEvmWalletsInjected = require('../wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.dev.js');
var evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet = require('../wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.dev.js');
var evm_wallets_signer_dist_thirdwebDevWalletsEvmWalletsSigner = require('../wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.dev.js');
var evm_wallets_magic_dist_thirdwebDevWalletsEvmWalletsMagic = require('../wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.dev.js');
var evm_wallets_metamask_dist_thirdwebDevWalletsEvmWalletsMetamask = require('../wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.dev.js');
var evm_wallets_phantom_dist_thirdwebDevWalletsEvmWalletsPhantom = require('../wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.dev.js');
var evm_wallets_privateKey_dist_thirdwebDevWalletsEvmWalletsPrivateKey = require('../wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.dev.js');
var evm_wallets_rainbowWallet_dist_thirdwebDevWalletsEvmWalletsRainbowWallet = require('../wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.dev.js');
var evm_wallets_safe_dist_thirdwebDevWalletsEvmWalletsSafe = require('../wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.dev.js');
var evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet = require('../../dist/smart-wallet-4f2c0607.cjs.dev.js');
var evm_wallets_trust_dist_thirdwebDevWalletsEvmWalletsTrust = require('../wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.dev.js');
var evm_wallets_walletConnect_dist_thirdwebDevWalletsEvmWalletsWalletConnect = require('../wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.dev.js');
var evm_wallets_walletConnectV1_dist_thirdwebDevWalletsEvmWalletsWalletConnectV1 = require('../wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.dev.js');
var evm_wallets_zerion_dist_thirdwebDevWalletsEvmWalletsZerion = require('../wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.dev.js');
var getInjectedMetamaskProvider = require('../../dist/getInjectedMetamaskProvider-4e3b30b1.cjs.dev.js');
var getInjectedPhantomProvider = require('../../dist/getInjectedPhantomProvider-84b0e75f.cjs.dev.js');
var getInjectedRainbowProvider = require('../../dist/getInjectedRainbowProvider-3436e57e.cjs.dev.js');
var getInjectedCoinbaseProvider = require('../../dist/getInjectedCoinbaseProvider-44030433.cjs.dev.js');
var assertWindowEthereum = require('../../dist/assertWindowEthereum-83395b2f.cjs.dev.js');
var WagmiConnector = require('../../dist/WagmiConnector-6ff7d562.cjs.dev.js');
var errors = require('../../dist/errors-323b40ec.cjs.dev.js');
var normalizeChainId = require('../../dist/normalizeChainId-8778491e.cjs.dev.js');
var constants = require('../../dist/constants-59c3e5a4.cjs.dev.js');
var embeddedWallet = require('../../dist/embedded-wallet-d4aeefa1.cjs.dev.js');
var auth = require('../../dist/auth-48859d5f.cjs.dev.js');
require('../../dist/classPrivateMethodGet-8801ecd5.cjs.dev.js');
require('../../dist/classPrivateFieldSet-f0dc2a42.cjs.dev.js');
require('@thirdweb-dev/chains');
require('../wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.dev.js');
require('../../dist/defineProperty-21d22449.cjs.dev.js');
require('ethers');
require('eventemitter3');
require('@thirdweb-dev/sdk');
require('buffer');
require('../connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.cjs.dev.js');
require('@paperxyz/sdk-common-utilities');
require('ethers/lib/utils');
require('@walletconnect/core');
require('@walletconnect/web3wallet');
require('@walletconnect/jsonrpc-utils');



exports.EIP155_SIGNING_METHODS = wc.EIP155_SIGNING_METHODS;
exports.walletIds = walletIds.walletIds;
exports.AbstractClientWallet = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.AbstractClientWallet;
exports.DEFAULT_DAPP_META = evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.DEFAULT_DAPP_META;
exports.Connector = connector.Connector;
exports.WagmiAdapter = connector.WagmiAdapter;
exports.PaperWallet = evm_wallets_paperWallet_dist_thirdwebDevWalletsEvmWalletsPaperWallet.PaperWallet;
exports.BloctoWallet = evm_wallets_blocto_dist_thirdwebDevWalletsEvmWalletsBlocto.BloctoWallet;
exports.CoinbaseWallet = evm_wallets_coinbaseWallet_dist_thirdwebDevWalletsEvmWalletsCoinbaseWallet.CoinbaseWallet;
exports.EmbeddedWallet = evm_wallets_embeddedWallet_dist_thirdwebDevWalletsEvmWalletsEmbeddedWallet.EmbeddedWallet;
exports.EthersWallet = evm_wallets_ethers_dist_thirdwebDevWalletsEvmWalletsEthers.EthersWallet;
exports.FrameWallet = evm_wallets_frame_dist_thirdwebDevWalletsEvmWalletsFrame.FrameWallet;
exports.InjectedWallet = evm_wallets_injected_dist_thirdwebDevWalletsEvmWalletsInjected.InjectedWallet;
exports.LocalWallet = evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet.LocalWallet;
exports.isValidPrivateKey = evm_wallets_localWallet_dist_thirdwebDevWalletsEvmWalletsLocalWallet.isValidPrivateKey;
exports.SignerWallet = evm_wallets_signer_dist_thirdwebDevWalletsEvmWalletsSigner.SignerWallet;
exports.MagicLink = evm_wallets_magic_dist_thirdwebDevWalletsEvmWalletsMagic.MagicLink;
exports.MetaMaskWallet = evm_wallets_metamask_dist_thirdwebDevWalletsEvmWalletsMetamask.MetaMaskWallet;
exports.PhantomWallet = evm_wallets_phantom_dist_thirdwebDevWalletsEvmWalletsPhantom.PhantomWallet;
exports.PrivateKeyWallet = evm_wallets_privateKey_dist_thirdwebDevWalletsEvmWalletsPrivateKey.PrivateKeyWallet;
exports.RainbowWallet = evm_wallets_rainbowWallet_dist_thirdwebDevWalletsEvmWalletsRainbowWallet.RainbowWallet;
exports.SafeWallet = evm_wallets_safe_dist_thirdwebDevWalletsEvmWalletsSafe.SafeWallet;
exports.SmartWallet = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.SmartWallet;
exports.getAllSigners = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getAllSigners;
exports.getAllSmartWallets = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getAllSmartWallets;
exports.getSmartWalletAddress = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.getSmartWalletAddress;
exports.isSmartWalletDeployed = evm_wallets_smartWallet_dist_thirdwebDevWalletsEvmWalletsSmartWallet.isSmartWalletDeployed;
exports.TrustWallet = evm_wallets_trust_dist_thirdwebDevWalletsEvmWalletsTrust.TrustWallet;
exports.WalletConnect = evm_wallets_walletConnect_dist_thirdwebDevWalletsEvmWalletsWalletConnect.WalletConnect;
exports.WalletConnectV1 = evm_wallets_walletConnectV1_dist_thirdwebDevWalletsEvmWalletsWalletConnectV1.WalletConnectV1;
exports.ZerionWallet = evm_wallets_zerion_dist_thirdwebDevWalletsEvmWalletsZerion.ZerionWallet;
exports.getInjectedMetamaskProvider = getInjectedMetamaskProvider.getInjectedMetamaskProvider;
exports.getInjectedPhantomProvider = getInjectedPhantomProvider.getInjectedPhantomProvider;
exports.getInjectedRainbowProvider = getInjectedRainbowProvider.getInjectedRainbowProvider;
exports.getInjectedCoinbaseProvider = getInjectedCoinbaseProvider.getInjectedCoinbaseProvider;
exports.assertWindowEthereum = assertWindowEthereum.assertWindowEthereum;
exports.WagmiConnector = WagmiConnector.WagmiConnector;
exports.AddChainError = errors.AddChainError;
exports.ChainNotConfiguredError = errors.ChainNotConfiguredError;
exports.ProviderRpcError = errors.ProviderRpcError;
exports.SwitchChainError = errors.SwitchChainError;
exports.UserRejectedRequestError = errors.UserRejectedRequestError;
exports.normalizeChainId = normalizeChainId.normalizeChainId;
exports.SafeSupportedChainsSet = constants.SafeSupportedChainsSet;
exports.AUTH_TOKEN_LOCAL_STORAGE_NAME = embeddedWallet.AUTH_TOKEN_LOCAL_STORAGE_NAME;
exports.DEVICE_SHARE_LOCAL_STORAGE_NAME = embeddedWallet.DEVICE_SHARE_LOCAL_STORAGE_NAME;
exports.DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED = embeddedWallet.DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED;
exports.EmbeddedWalletSdk = embeddedWallet.EmbeddedWalletSdk;
exports.UserStatus = embeddedWallet.UserStatus;
exports.WALLET_USER_DETAILS_LOCAL_STORAGE_NAME = embeddedWallet.WALLET_USER_DETAILS_LOCAL_STORAGE_NAME;
exports.WALLET_USER_ID_LOCAL_STORAGE_NAME = embeddedWallet.WALLET_USER_ID_LOCAL_STORAGE_NAME;
exports.AuthProvider = auth.AuthProvider;
exports.RecoveryShareManagement = auth.RecoveryShareManagement;
