'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var classPrivateFieldSet = require('../../../../dist/classPrivateFieldSet-4a4973f9.cjs.prod.js');
var walletIds = require('../../../../dist/walletIds-e0cdfa11.cjs.prod.js');
var evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase = require('../../../../dist/base-06270032.cjs.prod.js');
var chains = require('@thirdweb-dev/chains');
require('../../../../dist/classPrivateMethodGet-cf746c9e.cjs.prod.js');
require('../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.prod.js');
require('../../../../dist/defineProperty-6ca2d9a5.cjs.prod.js');
require('ethers');
require('eventemitter3');
require('@thirdweb-dev/sdk');

// eslint-disable-next-line @typescript-eslint/ban-types
var _storage = /*#__PURE__*/new WeakMap();
class SignerWallet extends evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.AbstractClientWallet {
  constructor(options) {
    super("signerWallet", options);
    classPrivateFieldSet._classPrivateFieldInitSpec(this, _storage, {
      writable: true,
      value: void 0
    });
    this.options = options;
    this.signer = options.signer;
    classPrivateFieldSet._classPrivateFieldSet(this, _storage, options?.storage || evm_wallets_base_dist_thirdwebDevWalletsEvmWalletsBase.createAsyncLocalStorage(walletIds.walletIds.localWallet));
  }
  async getConnector() {
    if (!this.connector) {
      const {
        SignerConnector
      } = await Promise.resolve().then(function () { return require('../../../connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.cjs.prod.js'); });
      if (!this.signer) {
        this.signer = this.options.signer;
      }
      const defaults = this.options.chain ? [...chains.defaultChains, this.options.chain] : chains.defaultChains;
      this.connector = new SignerConnector({
        chain: this.options.chain || chains.Ethereum,
        signer: this.signer,
        chains: this.options.chains || defaults,
        clientId: this.options.clientId,
        secretKey: this.options.secretKey
      });
    }
    return this.connector;
  }
}

exports.SignerWallet = SignerWallet;
